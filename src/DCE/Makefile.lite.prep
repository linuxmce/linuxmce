# -*- Makefile -*-

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->

ROOT = ..
VIP = ../VIPShared
GDEV = ./Gen_Devices
CXXFLAGS = -fPIC -Wall -Os
CPPFLAGS = -I./ -I../ -I../DCE/ -I../VIPShared/ -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE $(SNR_CPPFLAGS) -DUSE_LZO_DATAGRID -D_GNU_SOURCE -DLINK_TO_ROUTER $(EXTRA)
ifeq ($(ARCH),mipsel)
	CXX = mipsel-linux-g++
else
	CXX = g++
endif
LDFLAGS = -L$(ROOT)/lib
LDLIBS = -lpthread -lSerializeClass

#<-mkr_B_use_mysql_wrapper_b->
#CPPFLAGS += -I/usr/include/mysql
#LDFLAGS += -lmysqlclient_r
#<-mkr_B_use_mysql_wrapper_e->

#<-mkr_b_use_mysql_wrapper_b->
#CPPFLAGS += -DUSE_MYSQL_WRAPPER
#<-mkr_b_use_mysql_wrapper_e->

CPPFLAGS += -DEMBEDDED_LMCE

APPNAME = DCECommon
VERSION = 2.0.0

sources = DataGrid.cpp ClientSocket.cpp PlainClientSocket.cpp Logger.cpp Message.cpp \
	Socket.cpp ServerSocket.cpp SocketListener.cpp ServerLogger.cpp \
	AlarmManager.cpp Command_Impl.cpp Event_Impl.cpp \
	HandleRequestSocket.cpp \
	DeviceData_Router.cpp DeviceData_Impl.cpp DeviceData_Base.cpp \
	DCEConfig.cpp \
	Virtual_Device_Translator.cpp arp-cache.cpp \
	MessageBuffer.cpp \
	../db_wrapper/db_wrapper.cpp ../db_wrapper/ClientSocket.cpp ../db_wrapper/Socket.cpp

all: libDCECommon.so all-recursive

libDCECommon.so: $(sources:.cpp=.o)
	$(CXX) -shared $(CXXFLAGS) $(CPPFLAGS) -o $@ $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../lib

libDCECommon.a: $(sources:.cpp=.o)
	$(AR) rc $@ $(call cpath,$+)
	cp $@ ../lib

clean:
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) libDCECommon.so libDCECommon.a >/dev/null

package:
	./make_package.sh $(APPNAME) $(VERSION)

docs: docs_api

docs_api:
	doxygen Doxyfile

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
