#<-dceag-mh-b->!
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->

ROOT = ..
CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE -I/usr/include/mysql $(SNR_CPPFLAGS)
LDFLAGS = -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lmysqlclient_r -lpthread

CFLAGS = $(CXXFLAGS) -DLINUX -ggdb3 -DIRTRANS_AS_LIB

MYNAME = IRTrans
VERSION = 2.0.0
MYDEVTEMPLATEID = 1710mplateID

Gen_Dev_Files = $(GENDEV)/IRTransBase.cpp
sources = Main.cpp IRTrans.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CXXFLAGS +=
CPPFLAGS += -DIRTRANS_AS_LIB -DLINUX
LDFLAGS +=
XTRALDLIBS = -lIRBase -lSerial -lMessageTranslation

Gen_Dev_Files +=
sources += ../LIRC_DCE/IRReceiverBase.cpp ../VFD_LCD/VFD_LCD_Base.cpp ../VFD_LCD/CoreMenuStructure.cpp ../VFD_LCD/MenuNode.cpp
Csources += fileio.c linuxserio.c lowlevel.c server.c errormessage.c flashrom.c webserver.c xap.c

ifneq (,$(findstring -DARCH64, $(CPPFLAGS)))
	ccf-o = ccf-amd64.o
else
	ccf-o = ccf-i386.o
endif


#<-dceag-mf-b->!
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: ../bin/IRTrans

so: ../lib/IRTrans.so

$(ccf-o): ../../proprietary_binaries/IRTrans/$(ccf-o)
	cp ../../proprietary_binaries/IRTrans/$(ccf-o) $@

IRTrans.so: $(sources:.cpp=.o) $(Csources:.c=.o) $(ccf-o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	./post_make.sh $@

../lib/IRTrans.so: IRTrans.so
	cp IRTrans.so $@

IRTrans: $(sources:.cpp=.o) $(Csources:.c=.o) $(ccf-o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	./post_make.sh $@

../bin/IRTrans: IRTrans
	cp IRTrans $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d) $(Csources:.c=.o) $(Csources:.c=.d)) IRTrans.bin IRTrans.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
-include $(Csources:.c=.d)
endif
#<-dceag-mf-e->

