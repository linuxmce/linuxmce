#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->
SNR_LDFLAGS ?= <-mkr_t_compile_libs->

ROOT = ..

CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE -I/usr/include/mysql $(SNR_CPPFLAGS)
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lmysqlclient_r -lpthread

MYNAME = Insteon
VERSION = 1.0.0
MYDEVTEMPLATEID = 1899mplateID

Gen_Dev_Files = $(GENDEV)/InsteonBase.cpp
sources = Main.cpp Insteon.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CXXFLAGS +=
CPPFLAGS +=
LDFLAGS +=
XTRALDLIBS = libilib/libilib.a -lusb

Gen_Dev_Files +=
sources +=\
	LMCEInsteonAPI.cpp InsteonJob.cpp InsteonJobSendData.cpp InsteonJobSwitchChangeLevel.cpp InsteonJobReset.cpp\
	InsteonJobAddNode.cpp InsteonJobEZRainValveControl.cpp

#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: ../bin/Insteon

so: ../lib/Insteon.so

Insteon.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	./post_make.sh $@

../lib/Insteon.so: Insteon.so
	cp Insteon.so $@

Insteon: $(sources:.cpp=.o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

../bin/Insteon: Insteon
	cp Insteon $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) Insteon.bin Insteon.so >/dev/null

package:
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

