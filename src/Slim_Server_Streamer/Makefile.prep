#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->
SNR_LDFLAGS ?= <-mkr_t_compile_libs->

ROOT = ..

CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = -I$(ROOT) -I$(ROOT)/DCE $(SNR_CPPFLAGS)
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib
BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lpthread

MYNAME = Slim_Server_Streamer
VERSION = 2.0.0
MYDEVTEMPLATEID = 53mplateID

Gen_Dev_Files = $(GENDEV)/Slim_Server_StreamerBase.cpp
sources = Main.cpp Slim_Server_Streamer.cpp $(Gen_Dev_Files)
#<-dceag-mh-e->

CXXFLAGS += -fmessage-length=0
CPPFLAGS +=
LDFLAGS +=
XTRALDLIBS =

Gen_Dev_Files +=
sources += SqueezeBox_Player.cpp $(GENDEV)/SqueezeBox_PlayerBase.cpp
sources += Sound_Bridge.cpp $(GENDEV)/Sound_BridgeBase.cpp


#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: Slim_Server_Streamer

so: Slim_Server_Streamer.so

Slim_Server_Streamer.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	chmod +x post_make.sh
	./post_make.sh $@
		
Slim_Server_Streamer: $(sources:.cpp=.o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) Slim_Server_Streamer.bin Slim_Server_Streamer.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

