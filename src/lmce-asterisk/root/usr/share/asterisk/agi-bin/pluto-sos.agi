#!/usr/bin/perl
use strict;
use DBI;

$|=1;

# Setup some variables
my %AGI; my $tests = 0; my $fail = 0; my $pass = 0;

my $line;
my $DBHOST="localhost";
my $DBUSER="root";
my $DBPASSWD="";

my $db_handle;
my $sql;
my $statement;
my $row;
my @data;

while(<STDIN>) {
	chomp;
	last unless length($_);
	if (/^agi_(\w+)\:\s+(.*)$/) {
		$AGI{$1} = $2;
	}
}

print STDERR "AGI Environment Dump:\n";
foreach my $i (sort keys %AGI) {
	print STDERR " -- $i = $AGI{$i}\n";
}

sub checkresult {
	my ($res) = @_;
	my $retval;
	$tests++;
	chomp $res;
	if ($res =~ /^200/) {
		$res =~ /result=(-?\d+)/;
		if (!length($1)) {
			print STDERR "FAIL ($res)\n";
			$fail++;
		} else {
			print STDERR "PASS ($1)\n";
			$pass++;
		}
	} else {
		print STDERR "FAIL (unexpected result '$res')\n";
		$fail++;
	}
}


#connect to pluto_main database
$db_handle = DBI->connect("dbi:mysql:database=pluto_main;host=$DBHOST;user=$DBUSER;password=$DBPASSWD") or die "Could not connect to MySQL";
$sql = "select PK_Device from Device where FK_DeviceTemplate=33;";
$statement = $db_handle->prepare($sql) or die "Couldn't prepare query '$sql': $DBI::errstr\n";
$statement->execute() or die "Couldn't execute query '$sql': $DBI::errstr\n";
unless($row = $statement->fetchrow_hashref())
{
    print STDERR "NO SECURITY PLUGIN\n";
    exit(1);
}

$sql = "select IK_DeviceData from Device_DeviceData where FK_Device=\'".$row->{PK_Device}."\' and FK_DeviceData='96';";
$statement = $db_handle->prepare($sql) or die "Couldn't prepare query '$sql': $DBI::errstr\n";
$statement->execute() or die "Couldn't execute query '$sql': $DBI::errstr\n";
unless($row = $statement->fetchrow_hashref())
{
    print STDERR "NO DEVICEDATA FOR SECURITY PLUGIN\n";
    exit(1);
}

@data = split(/[,]/,$row->{IK_DeviceData});
#my $line="EXEC Dial \"Local/9235\@trusted/n\" \n";
#print $line;
#$line=<STDIN>;
				 
for(my $i=0;defined($data[$i]);$i+=2)
{
	my $j=int(($i+2)/2);
	print STDERR "[".$data[$i]."]=".$data[$i+1]."-->".$AGI{"extension"}."\n";
	if($AGI{"extension"} eq $j)
	{
		my $line="EXEC Dial \"Local/9".$data[$i+1]."\@trusted/n\" \n";
		print $line;
		$line=<STDIN>;
	}
}

my $result = <STDIN>;
&checkresult($result);
