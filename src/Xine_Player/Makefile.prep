#<-dceag-mh-b->
GENDEV=../Gen_Devices

SNR_CPPFLAGS ?= <-mkr_t_compile_defines->
SNR_LDFLAGS ?= <-mkr_t_compile_libs->

ROOT = ..

CXXFLAGS = -Wall -fPIC -ggdb3
CPPFLAGS = $(SNR_CPPFLAGS) -I$(ROOT) -I$(ROOT)/DCE -I/usr/lib/glib-2.0/include -I/usr/include/glib-2.0 -DDEBUG -DTHREAD_LOG -DLOG_ALL_QUERIES
LDFLAGS = $(SNR_LDFLAGS) -L$(ROOT)/lib -L$(ROOT)/Xine_Player


BASELDLIBS = -lSerializeClass -lDCECommon -lPlutoUtils -lpthread -ljpeg -lxine -lXtst -lX11 -lglib-2.0 -lXmu -lcdda_interface 
ifneq (,$(findstring -DARCH64, $(CPPFLAGS)))
	BASELDLIBS += -ldvdnav_xine_custom_64b
else
	BASELDLIBS += -ldvdnav_xine_custom
endif

MYNAME = Xine_Player
VERSION = 2.0.0
MYDEVTEMPLATEID = 5mplateID

Gen_Dev_Files = $(GENDEV)/Xine_PlayerBase.cpp
sources = Main.cpp Xine_Player.cpp Colorspace_Utils.cpp JpegEncoderDecoder.cpp Xine_Stream_Factory.cpp Xine_Stream.cpp XineMediaInfo.cpp $(Gen_Dev_Files) ../utilities/linux/window_manager/WMController/WMController.cpp ../utilities/linux/window_manager/wmctrl/wmctrl.cpp
#<-dceag-mh-e->

CXXFLAGS +=
CPPFLAGS +=
LDFLAGS += -L/usr/X11R6/lib  
XTRALDLIBS =

Gen_Dev_Files +=
sources +=

#<-dceag-mf-b->
LDLIBS = $(XTRALDLIBS) $(BASELDLIBS)

whattodo:
	@echo "type 'make bin', 'make so' or 'make all'"

all: bin so

bin: Xine_Player

so: Xine_Player.so

Xine_Player.so: $(sources:.cpp=.o)
	$(CXX) -shared -o $(MYNAME).so $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	chmod +x post_make.sh
	./post_make.sh $@
		
Xine_Player: $(sources:.cpp=.o)
	$(CXX) -o $(MYNAME) $(call cpath,$+) $(LDFLAGS) $(LDLIBS)
	cp $@ ../bin
	./post_make.sh $@

clean: clean-recursive
	rm -f $(call cpath,$(sources:.cpp=.o) $(sources:.cpp=.d)) Xine_Player.bin Xine_Player.so >/dev/null

package:
	chmod +x make_package.sh
	./make_package.sh $(MYNAME) $(VERSION) $(MYDEVTEMPLATEID)

include $(ROOT)/PlutoUtils/make.rules
ifeq (,$(findstring clean, $(MAKECMDGOALS)))
-include $(sources:.cpp=.d)
endif
#<-dceag-mf-e->

