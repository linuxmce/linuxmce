#!/bin/bash
### BEGIN INIT INFO 
# Provides:          avwizard
# Required-Start:    check_avwizard
# Required-Stop:     
# Should-Start:      
# Default-Start:     2 
# Default-Stop:      1 
# Short-Description: AVWizard
# Description:       This script starts the AV Wizard
### END INIT INFO #

if [ "$1" == "status" ] ; then
	if [ pidof AVWizard_Run.sh &> /dev/null ] ; then
        	echo "* AVWizard is running"
	else
		echo "* AVWizard is not running"
	fi
	exit 0
fi
                                                                
StartService() {
        ServiceDescription=$1
        ServiceCmd=$2
        ServiceBkg=$3

        if [[ -x $(echo $ServiceCmd | cut -d ' ' -f1) ]] ;then
                if [ -x /bin/plymouth ]; then
                        /bin/plymouth update --status="$ServiceDescription ... "
                fi
                echo -n "$ServiceDescription ... "
                if [[ "$ServiceBkg" == "&" ]] ;then
                        $ServiceCmd 1>/dev/null 2>/dev/null &
                else
                        $ServiceCmd 1>/dev/null 2>/dev/null
                fi
                err=$?

                if [[ "$err" == "0" ]] ;then
                        echo "ok"
                else
                        echo "fail"
                fi
        fi

        return $err
}
VerifyExitCode () {
        local EXITCODE=$?
        if [ "$EXITCODE" != "0" ] ; then
        	echo "An error (Exit code $EXITCODE) occured during the last action"
        	echo "$1"
                exit 1
        fi
}

Purge_Fglrx () {
#Purge fglrx driver if card changes. TODO Definitely required for fglrx, consider doing the same for nVidia.
	apt-get -y remove --purge xorg-driver-fglrx fglrx* --force-yes
	apt-get -y install --reinstall libgl1-mesa-glx libgl1-mesa-dri fglrx-modaliases --force-yes
	dpkg-reconfigure xserver-xorg
	apt-get -y install --reinstall xserver-xorg-core --force-yes
	cp /var/log/Xorg.0.log /var/log/Xorg.0.old.log
	echo > /var/log/Xorg.0.log
}
. /usr/pluto/bin/Config_Ops.sh

## Install driver based on the type of video card used
#See if fglrx is currently being used
fglrx_in_use=$(cat /var/log/Xorg.0.log | grep -o fglrx |sort -u)
vga_pci=$(lspci -v | grep -i 'VGA')

#Install nVidia driver
if echo "$vga_pci" | grep -qi 'nvidia'; then
	if [[ -n "$fglrx_in_use" ]]; then Purge_Fglrx; fi
	apt-get -yf install pluto-nvidia-video-drivers
	VerifyExitCode "Install Pluto nVidia Driver"
	StartService "Installing nVidia driver - this may take a few minutes" ". /usr/pluto/bin/nvidia-install.sh"

#Install Radeon driver
elif echo "$vga_pci" | grep -qi 'radeon'; then
	# Check to see if old Radeon card, if so, do not install new driver
	if echo "$vga_pci" | grep -Eqi 'radeon .* (r5|r6|r7)'; then
		if [[ -n "$fglrx_in_use" ]]; then Purge_Fglrx; fi
		apt-get -yf install xserver-xorg-video-radeonhd
		VerifyExitCode "Install Radeon Driver"
	elif echo "$vga_pci" | grep -Eqi 'radeon ((9|X|ES)(1|2?)([0-9])(5|0)0|Xpress)'; then
		if [[ -n "$fglrx_in_use" ]]; then Purge_Fglrx; fi
		apt-get -yf install xserver-xorg-video-radeon
		VerifyExitCode "Install Radeon Driver"
	else apt-get -yf install fglrx
		VerifyExitCode "Install fglrx Driver"
	fi

#Install Intel driver
elif echo "$vga_pci" | grep -qi 'Intel'; then
	if [[ -n "$fglrx_in_use" ]]; then Purge_Fglrx; fi
	if echo "$vga_pci" | grep -qi 'Intel .* i128'; then
		apt-get -yf install xserver-xorg-video-i128
		VerifyExitCode "Install Intel Driver"
	elif echo "$vga_pci" | grep -qi 'Intel .* i740'; then
		apt-get -yf install xserver-xorg-video-i740
		VerifyExitCode "Install Intel Driver"
	else apt-get -yf install xserver-xorg-video-intel
		VerifyExitCode "Install Intel Driver"
		if echo "$vga_pci" | grep -qi 'G45'; then
			apt-get -yf install libva-driver-i965
			VerifyExitCode "Install Intel Acceleration"
		fi
	fi

#Install VIA driver
elif echo "$vga_pci" | grep -qi 'VIA'; then
	if [[ -n "$fglrx_in_use" ]]; then Purge_Fglrx; fi
	if echo "$vga_pci" | grep -Eqi 'VIA .* (s3|Savage)'; then
		apt-get -yf install xserver-xorg-video-savage
		VerifyExitCode "Install VIA Savage Driver"
	elif echo "$vga_pci" | grep -qi 'VIA .* Chrome'; then
		apt-get -yf install xserver-xorg-video-openchrome
		VerifyExitCode "Install VIA Chrome Driver"
	fi

#Fallback to vesa
else 
	apt-get -yf install xserver-xorg-video-vesa
fi

if [[ "$AVWizardOverride" == "1" || "$AVWizardDone" != "1" ]] ;then
	ConfSet "AVWizardOverride" "0"
	/usr/pluto/bin/AVWizard_Run.sh 1>/dev/null 2>/dev/null </dev/null
else
	beep -l 50 -f 1000 -n -l 50 -f 1200 -n -l 50 -f 1400 -n -l 50 -f 1600 -n -l 50 -f 1800 -n -l 50 -f 2000 -n -l 50 -f 2200 &
fi

killall WatchGyroRemote 2>/dev/null
