#!/bin/bash
set -e

. ./filesd-parms.sh $@
. /usr/pluto/bin/Config_Ops.sh
. /usr/pluto/bin/Network_Parameters.sh

## firstrun for diskless mds
File="/etc/init.d/firstrun"

if ! [[ -d "${Parm_RootLocation}/$(dirname $File)" ]]; then
	mkdir -p "${Parm_RootLocation}/$(dirname $File)"
fi

#echo "${Content}" > "${Parm_RootLocation}/${File}"
cat <<-'EOF' >"${Parm_RootLocation}/${File}"
	#!/bin/bash
	### BEGIN INIT INFO
	# Provides:          firstrun
	# Required-Start:    $remote_fs
	# Required-Stop:     $remote_fs
	# Should-Start:
	# Default-Start:     2 3 4 5
	# Default-Stop:
	# Short-Description: firstrun
	# Description:       This script is run the first time linuxmce boots
	### END INIT INFO #

	DEVICEDATA_DISTRO_Raspbian_Wheezy_CONST=19

	raspbian() {
		trap '${INSSERV} -rfv firstrun' EXIT

		INSSERV=$(which insserv)

		echo -e "\n\n\n\n\n\n\n\n\nRPI FIRSTRUN\n\n\n\n\n\n\n\n\n" >&2

		# copy contents of /boot to /sdcard
		cp /boot/* /sdcard/

		# not required with working u-boot
		# remove u-boot kernel from /sdcard/config.txt
		#[[ ! -f /sdcard/config.txt.lmcebackup ]] && cp /sdcard/config.txt /sdcard/config.txt.lmcebackup
		#sed -i 's/^[kK]ernel/#&/' /sdcard/config.txt
		# add extra kernel boot args to /sdcard/cmdline.txt
		#[[ ! -f /sdcard/cmdline.txt.lmcebackup ]] && cp /sdcard/cmdline.txt /sdcard/cmdline.txt.lmcebackup
		#echo "dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 elevator=deadline rootwait root=/dev/nfs nfsroot=192.168.80.1:/usr/pluto/diskless/$PK_Device ip=dhcp rootfstype=nfs" > /sdcard/cmdline.txt

		"$INSSERV" -fv linuxmce
		"$INSSERV" -rfv firstrun
		reboot
		return 1
	}

	ubuntu() {
		trap 'update-rc.d -f firstrun remove' EXIT

		apt-get update
		update-pciids

		## Handle libdvdcss2
		dpkg -l libdvdcss2 | grep ^ii || find /usr/pluto/deb-cache/ -iname 'libdvdcss*' -exec dpkg -i {} \;

		## Install video driver
		. /usr/pluto/bin/Utils.sh
		CheckVideoDriver
		update-rc.d -f firstrun remove

		if echo "$Best_Video_Driver" | grep -Eq '(nvidia|fglrx|via|virge|savage)'; then
			sleep 5
			reboot
		fi
		return 0
	}

	start() {
		. /usr/pluto/bin/Config_Ops.sh

		case "$PK_Distro" in
			"$DEVICEDATA_DISTRO_Raspbian_Wheezy_CONST")
				raspbian
				err=$?
				;;
			*)
				ubuntu
				err=$?
		esac
		return $err
	}

	status() {
	        status_of_proc firstrun firstrun
		return $?
	}

	case "$1" in
	  start|"")
	        $1
		retval=$?
	        ;;
	  restart|reload|force-reload)
	        echo "Error: argument '$1' not supported" >&2
		retval=3
	        ;;
	  stop)
	        : # No-op
		retval=$?
	        ;;
	  status)
	        $1
	        retval=$?
	        ;;
	  *)
	        echo "Usage: $0 [start|stop|status]" >&2
		retval=3
	esac
	exit $retval
	:
	EOF

DISTRO=$(LC_ALL=C chroot ${Parm_RootLocation} lsb_release -is)
case "$DISTRO" in
        Debian|Raspbian)
                # debian/raspbian (LSB)
                INSSERV=$(LC_ALL=C chroot ${Parm_RootLocation} which insserv)
                LC_ALL=C chroot "${Parm_RootLocation}" "${INSSERV}" -fv firstrun >/dev/null
                ;;
        Ubuntu)
                # ubuntu (sysv)
                LC_ALL=C chroot "${Parm_RootLocation}" update-rc.d -f firstrun start 50 2 3 4 5 . >/dev/null
                ;;
        *)
		echo "Unknown Moon Distro!" >&2
		exit 1
                ;;
esac
chmod +x "${Parm_RootLocation}/${File}"
