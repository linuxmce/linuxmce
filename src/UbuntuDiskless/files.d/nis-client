#!/bin/bash

set -e 

. ./filesd-parms.sh $@

. /usr/pluto/bin/Network_Parameters.sh
. /usr/pluto/bin/Section_Ops.sh
. /usr/pluto/bin/Utils.sh
. /usr/pluto/bin/SQL_Ops.sh

## Config for nis to act as a client
File="/etc/default/nis"
mkdir -p "${Parm_RootLocation}/$(dirname $File)"
cp "/usr/pluto/templates/nis-client.template" "${Parm_RootLocation}/${File}"
PopulateSection "${Parm_RootLocation}/${File}" "Nis Master" "NISMASTER=$IntIP"

## Set the default nis domain
File="/etc/defaultdomain"
mkdir -p "${Parm_RootLocation}/$(dirname $File)"
## FIXME: Get this from the database
echo "LinuxMCE" > "${Parm_RootLocation}/${File}"

## Let the client know who is the server
File="/etc/yp.conf"
mkdir -p "${Parm_RootLocation}/$(dirname $File)"
echo "ypserver ${IntIP}" > "${Parm_RootLocation}/${File}"
echo "ypserver ${IntIP}" > ${File}

## Configure nsswitch file
File="/etc/nsswitch.conf"
mkdir -p "${Parm_RootLocation}/$(dirname $File)"
Content="
passwd:         compat
group:          compat
shadow:         compat

hosts:          files nis dns
networks:       files

protocols:      db files
services:       db files
ethers:         db files
rpc:            db files

netgroup:       nis
"
echo "$Content" > "${Parm_RootLocation}/${File}"

if [ ! -e ${Parm_RootLocation}/etc/group.pbackup ] ;then
   cp ${Parm_RootLocation}/etc/group ${Parm_RootLocation}/etc/group.pbackup 2>/dev/null || :
fi

if [ ! -e ${Parm_RootLocation}/etc/passwd.pbackup ] ;then
   cp ${Parm_RootLocation}/etc/passwd ${Parm_RootLocation}/etc/passwd.pbackup 2>/dev/null || :
fi

if [ ! -e ${Parm_RootLocation}/etc/shadow.pbackup ] ;then
   cp ${Parm_RootLocation}/etc/shadow ${Parm_RootLocation}/etc/shadow.pbackup 2>/dev/null || :
fi

## Force a diskless client to get passwd/shadow & group from nis
if [[ -f ${Parm_RootLocation}/etc/passwd ]] && ! BlacklistConfFiles "${Parm_RootLocation}/etc/passwd" ;then
	if ! grep -q "+::::::"   ${Parm_RootLocation}/etc/passwd ;then
		rm -f ${Parm_RootLocation}/etc/passwd.$$
		cat ${Parm_RootLocation}/etc/passwd >> ${Parm_RootLocation}/etc/passwd.$$
		echo "+::::::"   >> ${Parm_RootLocation}/etc/passwd.$$
		sed -ir '/.*:.*:[0-9]{4}:.*/d' ${Parm_RootLocation}/etc/passwd.$$
		mv ${Parm_RootLocation}/etc/passwd.$$  ${Parm_RootLocation}/etc/passwd
	fi
fi
if [[ -f ${Parm_RootLocation}/etc/shadow ]] &&  ! BlacklistConfFiles "${Parm_RootLocation}/etc/shadow" ;then
	if ! grep -q "+::::::::" ${Parm_RootLocation}/etc/shadow ;then
		rm -f ${Parm_RootLocation}/etc/shadow.$$
		cat ${Parm_RootLocation}/etc/shadow >> ${Parm_RootLocation}/etc/shadow.$$
	       	echo "+::::::::" >> ${Parm_RootLocation}/etc/shadow.$$
		mv ${Parm_RootLocation}/etc/shadow.$$ ${Parm_RootLocation}/etc/shadow
	fi
fi

if [[ -f ${Parm_RootLocation}/etc/group ]] &&  ! BlacklistConfFiles "${Parm_RootLocation}/etc/group" ;then
	if ! grep -q "+:::"      ${Parm_RootLocation}/etc/group ;then
		rm  -f ${Parm_RootLocation}/etc/group.$$
		cat /etc/group  | grep -v "^public:" >> ${Parm_RootLocation}/etc/group.$$
		echo "+:::"      >> ${Parm_RootLocation}/etc/group.$$
		mv ${Parm_RootLocation}/etc/group.$$ ${Parm_RootLocation}/etc/group
	fi
fi

## Add to /etc/hosts the 'dcerouter' hostname just in case nis fails to start on diskless mds
DisklessBoot=$(RunSQL "SELECT IK_DeviceData FROM Device_DeviceData WHERE FK_Device = '$Parm_Device' AND FK_DeviceData = '9'")
if [[ "$DisklessBoot" == "1" ]] ;then
	File="/etc/hosts"
	FullFilePath="${Parm_RootLocation}/${File}"
	
	mkdir -p "${Parm_RootLocation}/$(dirname $File)"

	# Remove old dcerouter entry from /etc/hosts
	grep -v '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*.*dcerouter[[:alnum:]_\.-]*$' "$FullFilePath" > "$FullFilePath.aux" || :
	mv "$FullFilePath.aux" "$FullFilePath"
	
	# Add new dcerouter entry to /etc/hosts
	echo "${IntIP} dcerouter" >>"$FullFilePath"
fi

