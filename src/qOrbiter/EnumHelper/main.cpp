#include <QCoreApplication>
#include <QFile>
#include <qdebug.h>
#include <QByteArray>
#include <QRegExp>
#include <QStringList>
int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    QByteArray dgData;
    QRegExp dgDefines("(#define DATAGRID_.*\\d(|\\d)\n)");
    dgDefines.setPatternSyntax(QRegExp::RegExp2);
    dgDefines.setMinimal(true );
    QFile lmce_datagrid_defines("../../pluto_main/Define_DataGrid.h");
    if(lmce_datagrid_defines.exists()){
        qDebug() << "found dg files";
        lmce_datagrid_defines.open(QFile::ReadOnly);
        dgData = lmce_datagrid_defines.readAll();

        QStringList defineStrings;
        int pos=0;
        while ((pos = dgDefines.indexIn(dgData, pos)) != -1) {

            QString transform = dgDefines.cap(1);
            transform.remove("#define ");
            transform.remove("DATAGRID_");
            transform.remove("\n");
            transform.replace(" ", " = ");
            transform.replace("_CONST", "");


            defineStrings << transform ;
            pos += dgDefines.matchedLength();
        }

        qDebug() << "Found :: " << dgDefines.captureCount();
        qDebug() << defineStrings.join(",\n");

        QFile out("../qOrbiter_src/datagrids.h");
        if(out.exists()){
            out.open(QFile::ReadWrite);
            if(out.isOpen()){
                out.resize(0);
                QString outData;
                outData="#ifndef DATAGRIDS_H\n"
                        "#define DATAGRIDS_H\n"
                        "/*\warn Autogenerated*/\n"
                        "#include <QObject>\n"
                        "class DataGrids : public QObject\n"
                        "{\n"
                        " Q_OBJECT\n"
                        "public:\n"
                        "explicit DataGrids(QObject *parent = 0);\n"
                        " enum DataGridList{\n"
                        "/*<ags>*/\n"+
                         defineStrings.join(",\n")
                       +"/*<agn>*/\n"
                        " };\n"
                        "Q_ENUMS(DataGridList)\n"
                        "  signals:\n"
                        "   public slots:\n"
                        "  };\n"
                        "  #endif // DATAGRIDS_H\n";
                QByteArray trans =  outData.toAscii();
                out.write(trans);
                out.close();
            }

        }
    } else {
        qDebug() << "No file found!";
    }

    return a.exec();
}
