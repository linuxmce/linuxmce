#!/usr/bin/make -f

#export DH_VERBOSE=1

include /usr/share/quilt/quilt.make

NCPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)

ifeq ($(NCPUS),-1)
	NCPUS:=1
endif

ifeq ($(NCPUS),0)
	NCPUS:=1
endif

DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

ifeq (nostrip,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	DEBUG_BUILD=1
endif
ifeq (noopt,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	DEBUG_BUILD=1
endif
ifdef DEBUG_BUILD
	# this enables -g and disables stripping of binaries
	CONFIGURE_OPTS += --compile-type=debug
endif

ifeq "$(DEB_BUILD_ARCH)" "i386"
	CONFIGURE_OPTS += --enable-runtime-cpudetect --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --enable-opengl-video --enable-glx-procaddrarb
# --enable-mmx --arch=i486 --cpu=i486 --tune=i486 
else
ifeq "$(DEB_BUILD_ARCH)" "sparc"
	CONFIGURE_OPTS += --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --extra-cflags="-mtune=ultrasparc -mcpu=ultrasparc"
else
ifeq "$(DEB_BUILD_ARCH)" "alpha"
	CONFIGURE_OPTS += --extra-cflags=-std=gnu99
else
ifeq "$(DEB_BUILD_ARCH)" "amd64"
	CONFIGURE_OPTS += --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --enable-opengl-video --enable-glx-procaddrarb
else 
ifeq "$(DEB_BUILD_ARCH)" "powerpc"
        CONFIGURE_OPTS += --disable-altivec
endif
endif
endif
endif
endif

configure: configure-stamp
configure-stamp: debian/stamp-patched
	dh_testdir

	./configure --prefix=/usr --enable-libfftw3 --enable-libfaad --enable-nonfree $(CONFIGURE_OPTS)

	echo "QMAKE_LFLAGS+=-Wl,--as-needed" >> libs/libmythdb/mythconfig.mak

ifeq "$(DEB_BUILD_ARCH)" "ia64"
	perl -i -pe 's,-O3,-Os,' libs/libmythdb/mythconfig.mak
	perl -i -pe 's,CONFIG_SMALL 0,CONFIG_SMALL 1,' config.h
else
ifeq "$(DEB_BUILD_ARCH)" "sparc"
	perl -i -pe 's,HAVE_VIS 1,HAVE_VIS 0,' config.h
	perl -i -pe 's,HAVE_VIS=yes,,' config.mak
	perl -i -pe 's,MPEG2_ACCEL_SPARC_VIS 1,MPEG2_ACCEL_SPARC_VIS 0,' libs/libmythmpeg2/mpeg2.h
else
ifeq "$(DEB_BUILD_ARCH)" "alpha"
	perl -i -pe 's,-freduce-all-givs,,' libs/libavcodec/libavcodec.pro
	perl -i -pe 's,-freduce-all-givs,,' libs/libavutil/libavutil.pro
endif
endif
endif

#	exit 1

	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	qmake -o Makefile PREFIX=/usr mythtv.pro

	$(MAKE) -j $(NCPUS)

	touch $@

clean: unpatch
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	[ ! -f Makefile ] || $(MAKE) distclean

	rm -f config.mak config.h

	debconf-updatepo

	dh_clean config.log version.cpp config.ep Makefile bindings/perl/Makefile.perl.old \
	config/Makefile

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_installdirs -pmythtv-backend var/lib/mythtv var/cache/mythtv \
	var/log/mythtv usr/share/doc/mythtv-backend
	dh_installdirs -pmythtv-common etc/mythtv

	$(MAKE) install INSTALL_ROOT=$(CURDIR)/debian/tmp

	rm debian/tmp/usr/local/lib/perl/*/auto/MythTV/.packlist

	find debian/tmp/usr/share -type f -exec chmod 0644 {} \;
	chmod +x debian/tmp/usr/share/mythtv/*.pl

	rm -f debian/tmp/usr/share/mythtv/FreeSans.ttf debian/tmp/usr/share/mythtv/FreeMono.ttf debian/tmp/usr/share/mythtv/FreeSansBold.ttf \
	debian/tmp/usr/share/mythtv/themes/BlackCurves-OSD/DejaVuSans.ttf debian/tmp/usr/share/mythtv/themes/Gray-OSD/DejaVuSans-Bold.ttf \
	debian/tmp/usr/share/mythtv/themes/Gray-OSD/DejaVuSans-Oblique.ttf debian/tmp/usr/share/mythtv/themes/Gray-OSD/DejaVuSans.ttf \
	debian/tmp/usr/share/mythtv/themes/Terra/watermarks/README.license

	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeSans.ttf			usr/share/mythtv/FreeSans.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeSansBold.ttf		usr/share/mythtv/FreeSansBold.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeMono.ttf			usr/share/mythtv/FreeMono.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf		usr/share/mythtv/themes/BlackCurves-OSD/DejaVuSans.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-dejavu/DejaVuSans-Bold.ttf		usr/share/mythtv/themes/Gray-OSD/DejaVuSans-Bold.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-dejavu/DejaVuSans-Oblique.ttf	usr/share/mythtv/themes/Gray-OSD/DejaVuSans-Oblique.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf		usr/share/mythtv/themes/Gray-OSD/DejaVuSans.ttf

	dh_install --fail-missing

	dh_install -pmythtv-frontend debian/mythtv.desktop usr/share/applications
	dh_install -pmythtv-backend debian/mythtv-setup.desktop usr/share/applications

	rm -f debian/mythtv/usr/share/mythtv/setup.xml
	rm debian/mythtv-common/usr/share/mythtv/themes/BlackCurves-OSD/COPYING

# Autogenerated configuration files
	set -e; \
	for cf in debian/mythtv-common/usr/share/mythtv/mysql.txt; do \
		ln -s /etc/mythtv/`basename $$cf` $$cf; \
	done

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installdebconf -i
	dh_installdocs -A README debian/README.Debian AUTHORS FAQ UPGRADING keys.txt
	dh_installexamples -pmythtv-doc contrib/*
	dh_installcron -i
	dh_installchangelogs
	dh_link -i
	dh_perl -i
	dh_pysupport -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i -- -Zbzip2

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -a -A README debian/README.Debian AUTHORS keys.txt FAQ UPGRADING
	find debian -name COPYING | xargs rm -f
	dh_installdebconf -a
	dh_installexamples -a
	dh_installmenu -a
	dh_installlogrotate -a
	dh_installinit -a -u'defaults 40 16'
	dh_installcron -a
	dh_installinfo -a
	dh_installchangelogs
ifneq (nostrip,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	dh_strip -a
endif
	dh_link -a
	dh_compress -a
	dh_fixperms -a -Xusr/share/mythtv/mythconverg_restore.pl -Xusr/share/mythtv/mythconverg_backup.pl
	dh_makeshlibs -a -V
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a -- -Zbzip2

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
