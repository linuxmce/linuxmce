#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-51_cuttime.dpatch by Udo Richter <udo_richter@gmx.de>
## http://www.udo-richter.de/vdr/patches.en.html#cuttime
##
## Thomas Günther <tom@toms-cafe.de>:
##   - adapted to VDR-1.5.7 with liemikuutio patch
##   - adapted to VDR-1.7.4 with liemikuutio patch
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Modifies the start time of recordings to the first cutting mark.
## DP: 
## DP: 2007-07-01 Tobias Grimm <tg@e-tobi.net>
## DP:     - Added setup option to enable/disable CutTime

@DPATCH@
diff -Naurp vdr-1.7.4-liemikuutio/config.c vdr-1.7.4-liemikuutio-cuttime/config.c
--- vdr-1.7.4-liemikuutio/config.c	2009-04-01 01:11:59.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/config.c	2009-04-01 19:23:37.000000000 +0000
@@ -213,6 +213,7 @@ cSetup Setup;
 
 cSetup::cSetup(void)
 {
+  CutTimePatchEnabled = 0;
   strcpy(OSDLanguage, ""); // default is taken from environment
   strcpy(OSDSkin, "sttng");
   strcpy(OSDTheme, "default");
@@ -472,6 +473,7 @@ bool cSetup::Parse(const char *Name, con
   else if (!strcasecmp(Name, "ShowRecLength"))       ShowRecLength      = atoi(Value);
   else if (!strcasecmp(Name, "ShowProgressBar"))     ShowProgressBar    = atoi(Value);
   else if (!strcasecmp(Name, "MenuCmdPosition"))     MenuCmdPosition    = atoi(Value);
+  else if (!strcasecmp(Name, "CutTimePatchEnabled")) CutTimePatchEnabled= atoi(Value);
   else
      return false;
   return true;
@@ -560,6 +562,7 @@ bool cSetup::Save(void)
   Store("ShowRecLength",      ShowRecLength);
   Store("ShowProgressBar",    ShowProgressBar);
   Store("MenuCmdPosition",    MenuCmdPosition);
+  Store("CutTimePatchEnabled",CutTimePatchEnabled);
 
   Sort();
 
diff -Naurp vdr-1.7.4-liemikuutio/config.h vdr-1.7.4-liemikuutio-cuttime/config.h
--- vdr-1.7.4-liemikuutio/config.h	2009-04-01 01:11:59.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/config.h	2009-04-01 19:23:37.000000000 +0000
@@ -269,6 +269,7 @@ public:
   int InitialVolume;
   int EmergencyExit;
   int ShowRecDate, ShowRecTime, ShowRecLength, ShowProgressBar, MenuCmdPosition;
+  int CutTimePatchEnabled;
   int __EndData__;
   cSetup(void);
   cSetup& operator= (const cSetup &s);
diff -Naurp vdr-1.7.4-liemikuutio/cutter.c vdr-1.7.4-liemikuutio-cuttime/cutter.c
--- vdr-1.7.4-liemikuutio/cutter.c	2009-01-24 15:19:26.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/cutter.c	2009-04-01 19:23:37.000000000 +0000
@@ -201,6 +201,14 @@ bool cCutter::Start(const char *FileName
      error = false;
      ended = false;
      cRecording Recording(FileName);
+
+     if (Setup.CutTimePatchEnabled) {
+        cMarks FromMarks;
+        FromMarks.Load(FileName, Recording.FramesPerSecond(), Recording.IsPesRecording());
+        cMark *First=FromMarks.First();
+        if (First) Recording.SetStartTime(Recording.start+((First->position/Recording.FramesPerSecond()+30)/60)*60);
+     }
+
      const char *evn = Recording.PrefixFileName('%');
      if (evn && RemoveVideoFile(evn) && MakeDirs(evn, true)) {
         // XXX this can be removed once RenameVideoFile() follows symlinks (see videodir.c)
diff -Naurp vdr-1.7.4-liemikuutio/menu.c vdr-1.7.4-liemikuutio-cuttime/menu.c
--- vdr-1.7.4-liemikuutio/menu.c	2009-04-01 01:11:59.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/menu.c	2009-04-01 19:23:37.000000000 +0000
@@ -2899,6 +2899,7 @@ cMenuSetupRecord::cMenuSetupRecord(void)
   Add(new cMenuEditBoolItem(tr("Setup.Recording$Show date"),                 &data.ShowRecDate));
   Add(new cMenuEditBoolItem(tr("Setup.Recording$Show time"),                 &data.ShowRecTime));
   Add(new cMenuEditBoolItem(tr("Setup.Recording$Show length"),               &data.ShowRecLength));
+  Add(new cMenuEditBoolItem(tr("Setup.CutTimePatch$Adapt start time to cutting marks"), &data.CutTimePatchEnabled));
 }
 
 // --- cMenuSetupReplay ------------------------------------------------------
diff -Naurp vdr-1.7.4-liemikuutio/po/de_DE.po vdr-1.7.4-liemikuutio-cuttime/po/de_DE.po
--- vdr-1.7.4-liemikuutio/po/de_DE.po	2009-04-01 01:12:00.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/po/de_DE.po	2009-04-01 19:23:37.000000000 +0000
@@ -1064,3 +1064,6 @@ msgstr "AufnahmeZeit anzeigen"
 
 msgid "Setup.Recording$Show length"
 msgstr "Länge der Aufnahme anzeigen"
+
+msgid "Setup.CutTimePatch$Adapt start time to cutting marks"
+msgstr "Startzeit an Schnittmarken anpassen"
diff -Naurp vdr-1.7.4-liemikuutio/recording.c vdr-1.7.4-liemikuutio-cuttime/recording.c
--- vdr-1.7.4-liemikuutio/recording.c	2009-04-01 01:12:00.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/recording.c	2009-04-01 19:23:37.000000000 +0000
@@ -912,6 +912,15 @@ const char *cRecording::Title(char Delim
   return titleBuffer;
 }
 
+void cRecording::SetStartTime(time_t Start) 
+{
+  start=Start;
+  if (fileName) {
+  	 free(fileName);
+  	 fileName = NULL;
+  	 }
+}
+
 const char *cRecording::PrefixFileName(char Prefix)
 {
   cString p = PrefixVideoFileName(FileName(), Prefix);
diff -Naurp vdr-1.7.4-liemikuutio/recording.h vdr-1.7.4-liemikuutio-cuttime/recording.h
--- vdr-1.7.4-liemikuutio/recording.h	2009-04-01 01:12:00.000000000 +0000
+++ vdr-1.7.4-liemikuutio-cuttime/recording.h	2009-04-01 19:23:37.000000000 +0000
@@ -106,6 +106,7 @@ public:
   const char *FileName(void) const;
   const char *Title(char Delimiter = ' ', bool NewIndicator = false, int Level = -1, bool Original = true) const;
   const cRecordingInfo *Info(void) const { return info; }
+  void SetStartTime(time_t Start);
   const char *PrefixFileName(char Prefix);
   int HierarchyLevels(void) const;
   void ResetResume(void) const;
