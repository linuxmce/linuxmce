#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-54_deltimeshiftrec.dpatch by Tobias Grimm <tg@e-tobi.net>
##
## Thomas Günther <tom@toms-cafe.de>:
##   - adapted to VDR-1.7.8
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Offers the choice to delete timeshift recordings
## DP: Taken from the Zulu extensions patch
## DP: See http://www.zulu-entertainment.de/download.php?group=VDR

@DPATCH@
diff -Naur vdr-1.7.8/config.c vdr-1.7.8-deltimeshiftrec/config.c
--- vdr-1.7.8/config.c	2009-06-13 10:25:05.000000000 +0000
+++ vdr-1.7.8-deltimeshiftrec/config.c	2009-06-14 18:16:53.000000000 +0000
@@ -236,6 +236,7 @@
   TimeTransponder = 0;
   MarginStart = 2;
   MarginStop = 10;
+  DelTimeshiftRec = 0;
   AudioLanguages[0] = -1;
   DisplaySubtitles = 0;
   SubtitleLanguages[0] = -1;
@@ -423,6 +424,7 @@
   else if (!strcasecmp(Name, "TimeTransponder"))     TimeTransponder    = atoi(Value);
   else if (!strcasecmp(Name, "MarginStart"))         MarginStart        = atoi(Value);
   else if (!strcasecmp(Name, "MarginStop"))          MarginStop         = atoi(Value);
+  else if (!strcasecmp(Name, "DelTimeshiftRec"))     DelTimeshiftRec    = atoi(Value);
   else if (!strcasecmp(Name, "AudioLanguages"))      return ParseLanguages(Value, AudioLanguages);
   else if (!strcasecmp(Name, "DisplaySubtitles"))    DisplaySubtitles   = atoi(Value);
   else if (!strcasecmp(Name, "SubtitleLanguages"))   return ParseLanguages(Value, SubtitleLanguages);
@@ -515,6 +517,7 @@
   Store("TimeTransponder",    TimeTransponder);
   Store("MarginStart",        MarginStart);
   Store("MarginStop",         MarginStop);
+  Store("DelTimeshiftRec",    DelTimeshiftRec);
   StoreLanguages("AudioLanguages", AudioLanguages);
   Store("DisplaySubtitles",   DisplaySubtitles);
   StoreLanguages("SubtitleLanguages", SubtitleLanguages);
diff -Naur vdr-1.7.8/config.h vdr-1.7.8-deltimeshiftrec/config.h
--- vdr-1.7.8/config.h	2009-05-21 11:11:32.000000000 +0000
+++ vdr-1.7.8-deltimeshiftrec/config.h	2009-06-14 18:16:53.000000000 +0000
@@ -219,6 +219,7 @@
   int TimeSource;
   int TimeTransponder;
   int MarginStart, MarginStop;
+  int DelTimeshiftRec;
   int AudioLanguages[I18N_MAX_LANGUAGES + 1];
   int DisplaySubtitles;
   int SubtitleLanguages[I18N_MAX_LANGUAGES + 1];
diff -Naur vdr-1.7.8/menu.c vdr-1.7.8-deltimeshiftrec/menu.c
--- vdr-1.7.8/menu.c	2009-05-21 11:10:38.000000000 +0000
+++ vdr-1.7.8-deltimeshiftrec/menu.c	2009-06-14 18:25:31.000000000 +0000
@@ -2673,6 +2673,7 @@
 
 class cMenuSetupRecord : public cMenuSetupBase {
 private:
+  const char *DelTimeshiftRecValues[3];
   const char *pauseKeyHandlingTexts[3];
 public:
   cMenuSetupRecord(void);
@@ -2680,12 +2681,16 @@
 
 cMenuSetupRecord::cMenuSetupRecord(void)
 {
+  DelTimeshiftRecValues[0] = tr("request");
+  DelTimeshiftRecValues[1] = tr("no");
+  DelTimeshiftRecValues[2] = tr("yes");
   pauseKeyHandlingTexts[0] = tr("do not pause live video");
   pauseKeyHandlingTexts[1] = tr("confirm pause live video");
   pauseKeyHandlingTexts[2] = tr("pause live video");
   SetSection(tr("Recording"));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Margin at start (min)"),     &data.MarginStart));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Margin at stop (min)"),      &data.MarginStop));
+  Add(new cMenuEditStraItem(tr("Setup.Recording$Delete timeshift recording"), &data.DelTimeshiftRec, 3, DelTimeshiftRecValues));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Primary limit"),             &data.PrimaryLimit, 0, MAXPRIORITY));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Default priority"),          &data.DefaultPriority, 0, MAXPRIORITY));
   Add(new cMenuEditIntItem( tr("Setup.Recording$Default lifetime (d)"),      &data.DefaultLifetime, 0, MAXLIFETIME));
@@ -4033,6 +4038,56 @@
      currentReplayControl = NULL;
 }
 
+void cReplayControl::Stop(void)
+{
+  int dummy;
+  bool playing = GetIndex(dummy, dummy, false);
+  cRecordControl* rc = cRecordControls::GetRecordControl(fileName);
+
+  if (playing && rc && rc->InstantId()) {
+     isyslog("found Timeshiftrecording");
+
+     if ((Setup.DelTimeshiftRec != 0 ) || (Interface->Confirm(tr("Delete recording?")))) {
+        cRecordControl *rc = cRecordControls::GetRecordControl(fileName);
+        if (rc) {
+           cTimer *timer = rc->Timer();
+           if (timer) {
+              const char* reccmd_backup = cRecordingUserCommand::GetCommand();
+              cRecordingUserCommand::SetCommand(NULL);
+ 
+              timer->Skip();
+              cRecordControls::Process(time(NULL));
+              if (timer->IsSingleEvent()) {
+                 isyslog("deleting timer %s", *timer->ToDescr());
+                 Timers.Del(timer);
+                 }
+              Timers.SetModified();
+
+              // restore reccmd
+              cRecordingUserCommand::SetCommand(reccmd_backup);
+              }
+           }
+        isyslog("stop replaying %s", fileName);
+        cDvbPlayerControl::Stop();
+
+        if (Setup.DelTimeshiftRec != 1) {
+           cRecording *recording = Recordings.GetByName(fileName);;
+           if (recording) {
+              if (recording->Delete()) {
+                 Recordings.DelByName(fileName);
+                 ClearLastReplayed(fileName);
+                 return;
+                 }
+              else
+                 Skins.Message(mtError, tr("Error while deleting recording!"));
+              }
+           }
+        }
+     else
+        cDvbPlayerControl::Stop();
+     }
+}
+
 void cReplayControl::SetRecording(const char *FileName, const char *Title)
 {
   free(fileName);
@@ -4413,7 +4468,12 @@
                            else
                               Show();
                            break;
-            case kBack:    return osRecordings;
+            case kBack: {  cRecordControl* rc = cRecordControls::GetRecordControl(fileName);
+                           if (rc && rc->InstantId())
+                              return osEnd;
+                           else
+                              return osRecordings;
+                        }
             default:       return osUnknown;
             }
           }
diff -Naur vdr-1.7.8/menu.h vdr-1.7.8-deltimeshiftrec/menu.h
--- vdr-1.7.8/menu.h	2008-02-10 16:01:53.000000000 +0000
+++ vdr-1.7.8-deltimeshiftrec/menu.h	2009-06-14 18:16:53.000000000 +0000
@@ -237,6 +237,7 @@
 public:
   cReplayControl(void);
   virtual ~cReplayControl();
+  void Stop(void);
   virtual cOsdObject *GetInfo(void);
   virtual eOSState ProcessKey(eKeys Key);
   virtual void Show(void);
diff -Naur vdr-1.7.8/recording.h vdr-1.7.8-deltimeshiftrec/recording.h
--- vdr-1.7.8/recording.h	2009-05-23 12:14:42.000000000 +0000
+++ vdr-1.7.8-deltimeshiftrec/recording.h	2009-06-14 18:16:53.000000000 +0000
@@ -202,6 +202,7 @@
 private:
   static const char *command;
 public:
+  static const char *GetCommand(void) { return command; }
   static void SetCommand(const char *Command) { command = Command; }
   static void InvokeCommand(const char *State, const char *RecordingFileName);
   };
