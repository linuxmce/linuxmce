#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-53_dvbsetup.dpatch by Tobias Grimm <tg@e-tobi.net>
##
## Thomas Günther <tom@toms-cafe.de>:
##   - updated to version of extensions patch 72
##   - adapted to VDR-1.7.8 with noepg patch
##   - solved conflicts with other patches
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Setup for AC3 transfer and Channel Blocker
## DP: Taken from the Zulu extensions patch 72
## DP: See http://www.zulu-entertainment.de/download.php?group=VDR

@DPATCH@
diff -Naurp vdr-1.7.8-noepg/config.c vdr-1.7.8-noepg-dvbsetup/config.c
--- vdr-1.7.8-noepg/config.c	2009-06-15 21:04:42.000000000 +0000
+++ vdr-1.7.8-noepg-dvbsetup/config.c	2009-06-15 21:52:59.000000000 +0000
@@ -234,6 +234,10 @@ cSetup::cSetup(void)
   SetSystemTime = 0;
   TimeSource = 0;
   TimeTransponder = 0;
+  DolbyTransferFix = 1;
+  ChannelBlocker = 0;
+  ChannelBlockerMode = 0;
+  ChannelBlockerList = strdup("");
   noEPGMode=0;
   noEPGList=strdup("");
   MarginStart = 2;
@@ -306,12 +310,15 @@ cSetup::cSetup(void)
 
 cSetup::~cSetup()
 {
+  free(ChannelBlockerList);
   free(noEPGList);
 }
 
 cSetup& cSetup::operator= (const cSetup &s)
 {
   memcpy(&__BeginData__, &s.__BeginData__, (char *)&s.__EndData__ - (char *)&s.__BeginData__);
+  free(ChannelBlockerList);
+  ChannelBlockerList = strdup(s.ChannelBlockerList);
   free(noEPGList);
   noEPGList = strdup(s.noEPGList);
   return *this;
@@ -430,6 +437,13 @@ bool cSetup::Parse(const char *Name, con
   else if (!strcasecmp(Name, "SetSystemTime"))       SetSystemTime      = atoi(Value);
   else if (!strcasecmp(Name, "TimeSource"))          TimeSource         = cSource::FromString(Value);
   else if (!strcasecmp(Name, "TimeTransponder"))     TimeTransponder    = atoi(Value);
+  else if (!strcasecmp(Name, "DolbyTransferFix"))    DolbyTransferFix   = atoi(Value);
+  else if (!strcasecmp(Name, "ChannelBlocker"))      ChannelBlocker     = atoi(Value);
+  else if (!strcasecmp(Name, "ChannelBlockerMode"))  ChannelBlockerMode = atoi(Value);
+  else if (!strcasecmp(Name, "ChannelBlockerList")) {
+     free(ChannelBlockerList);
+     ChannelBlockerList = strdup(Value ? Value : "");
+     }
   else if (!strcasecmp(Name, "noEPGMode"))           noEPGMode          = atoi(Value);
   else if (!strcasecmp(Name, "noEPGList")) {
     free(noEPGList);
@@ -527,6 +541,10 @@ bool cSetup::Save(void)
   Store("SetSystemTime",      SetSystemTime);
   Store("TimeSource",         cSource::ToString(TimeSource));
   Store("TimeTransponder",    TimeTransponder);
+  Store("DolbyTransferFix",   DolbyTransferFix);
+  Store("ChannelBlocker",     ChannelBlocker);
+  Store("ChannelBlockerMode", ChannelBlockerMode);
+  Store("ChannelBlockerList", ChannelBlockerList);
   Store("noEPGMode",          noEPGMode);
   Store("noEPGList",          noEPGList);
   Store("MarginStart",        MarginStart);
diff -Naurp vdr-1.7.8-noepg/config.h vdr-1.7.8-noepg-dvbsetup/config.h
--- vdr-1.7.8-noepg/config.h	2009-06-15 21:02:48.000000000 +0000
+++ vdr-1.7.8-noepg-dvbsetup/config.h	2009-06-15 21:28:57.000000000 +0000
@@ -218,6 +218,9 @@ public:
   int SetSystemTime;
   int TimeSource;
   int TimeTransponder;
+  int DolbyTransferFix; 
+  int ChannelBlocker; 
+  int ChannelBlockerMode; 
   int noEPGMode;
   int MarginStart, MarginStop;
   int AudioLanguages[I18N_MAX_LANGUAGES + 1];
@@ -275,6 +278,7 @@ public:
   int InitialVolume;
   int EmergencyExit;
   int __EndData__;
+  char *ChannelBlockerList; // pointer not to be flat-copied
   char *noEPGList; // pointer not to be flat-copied
   cSetup(void);
   ~cSetup();
diff -Naurp vdr-1.7.8-noepg/dvbdevice.c vdr-1.7.8-noepg-dvbsetup/dvbdevice.c
--- vdr-1.7.8-noepg/dvbdevice.c	2009-06-06 11:17:20.000000000 +0000
+++ vdr-1.7.8-noepg-dvbsetup/dvbdevice.c	2009-06-15 21:54:49.000000000 +0000
@@ -241,6 +241,7 @@ bool cDvbTuner::SetFrontend(void)
                     }
                   }
               diseqcCommands = diseqc->Commands();
+              isyslog("Sent DISEQC command: %s", diseqcCommands);
               }
            frequency -= diseqc->Lof();
            }
@@ -483,6 +484,9 @@ cDvbDevice::cDvbDevice(int n)
 
   if (fd_frontend >= 0) {
      if (ioctl(fd_frontend, FE_GET_INFO, &frontendInfo) >= 0) {
+        if (Setup.ChannelBlockerMode == 4)
+           frontendType = (n == Setup.PrimaryDVB - 1) ? SYS_UNDEFINED : frontendType;
+        else
         switch (frontendInfo.type) {
           case FE_QPSK: frontendType = (frontendInfo.caps & FE_CAN_2G_MODULATION) ? SYS_DVBS2 : SYS_DVBS; break;
           case FE_OFDM: frontendType = SYS_DVBT; break;
@@ -796,6 +800,11 @@ void cDvbDevice::GetOsdSize(int &Width, 
 
 bool cDvbDevice::SetAudioBypass(bool On)
 {
+  if (Setup.DolbyTransferFix && On) {
+     cChannel *c=Channels.GetByNumber(cDevice::CurrentChannel());
+     if (c->Ca(0) != 0)
+        return false;
+     }
   if (setTransferModeForDolbyDigital != 1)
      return false;
   return ioctl(fd_audio, AUDIO_SET_BYPASS_MODE, On) == 0;
@@ -909,6 +918,20 @@ bool cDvbDevice::ProvidesSource(int Sour
 
 bool cDvbDevice::ProvidesTransponder(const cChannel *Channel) const
 {
+  if (Setup.ChannelBlocker != 0) {
+     if ((Setup.ChannelBlockerMode == 0) ||
+         (Setup.ChannelBlockerMode == 1 && HasDecoder()) ||
+         (Setup.ChannelBlockerMode == 2 && IsPrimaryDevice()) ||
+         (Setup.ChannelBlockerMode == 3 && IsPrimaryDevice() && HasDecoder())) {
+        if ((Setup.ChannelBlocker == 1 && cSource::IsCable(Channel->Source()) && Channel->Modulation() == QAM_256) ||
+            (Setup.ChannelBlocker == 2 && cSource::IsCable(Channel->Source())) ||
+            (Setup.ChannelBlocker == 3 && cSource::IsSat(Channel->Source())) ||
+            (Setup.ChannelBlocker == 4 && strstr(::Setup.ChannelBlockerList, Channel->GetChannelID().ToString()) != NULL) || // blacklist
+            (Setup.ChannelBlocker == 5 && strstr(::Setup.ChannelBlockerList, Channel->GetChannelID().ToString()) == NULL) || // whitelist
+            (Setup.ChannelBlocker == 6))
+           return false;
+        }
+     }
   if (!ProvidesSource(Channel->Source()))
      return false; // doesn't provide source
   if (!cSource::IsSat(Channel->Source()))
@@ -920,6 +943,20 @@ bool cDvbDevice::ProvidesTransponder(con
 
 bool cDvbDevice::ProvidesChannel(const cChannel *Channel, int Priority, bool *NeedsDetachReceivers) const
 {
+  if (Setup.ChannelBlocker != 0) {
+     if ((Setup.ChannelBlockerMode == 0) ||
+         (Setup.ChannelBlockerMode == 1 && HasDecoder()) ||
+         (Setup.ChannelBlockerMode == 2 && IsPrimaryDevice()) ||
+         (Setup.ChannelBlockerMode == 3 && IsPrimaryDevice() && HasDecoder())) {
+        if ((Setup.ChannelBlocker == 1 && cSource::IsCable(Channel->Source()) && Channel->Modulation() == QAM_256) ||
+            (Setup.ChannelBlocker == 2 && cSource::IsCable(Channel->Source())) ||
+            (Setup.ChannelBlocker == 3 && cSource::IsSat(Channel->Source())) ||
+            (Setup.ChannelBlocker == 4 && strstr(::Setup.ChannelBlockerList, Channel->GetChannelID().ToString()) != NULL) || // blacklist
+            (Setup.ChannelBlocker == 5 && strstr(::Setup.ChannelBlockerList, Channel->GetChannelID().ToString()) == NULL) || // whitelist
+            (Setup.ChannelBlocker == 6))
+           return false;
+        }
+     }
   bool result = false;
   bool hasPriority = Priority < 0 || Priority > this->Priority();
   bool needsDetachReceivers = false;
diff -Naurp vdr-1.7.8-noepg/menu.c vdr-1.7.8-noepg-dvbsetup/menu.c
--- vdr-1.7.8-noepg/menu.c	2009-06-15 21:06:02.000000000 +0000
+++ vdr-1.7.8-noepg-dvbsetup/menu.c	2009-06-15 21:58:36.000000000 +0000
@@ -2385,6 +2385,8 @@ eOSState cMenuSetupEPG::ProcessKey(eKeys
 
 class cMenuSetupDVB : public cMenuSetupBase {
 private:
+  const char *ChannelBlockers[7];
+  const char *ChannelBlockerModes[4];
   int originalNumAudioLanguages;
   int numAudioLanguages;
   int originalNumSubtitleLanguages;
@@ -2423,6 +2425,19 @@ void cMenuSetupDVB::Setup(void)
 {
   int current = Current();
 
+  ChannelBlockers[0] = tr("none");
+  ChannelBlockers[1] = tr("qam256");
+  ChannelBlockers[2] = tr("dvb-c");
+  ChannelBlockers[3] = tr("dvb-s");
+  ChannelBlockers[4] = tr("blacklist");
+  ChannelBlockers[5] = tr("whitelist");
+  ChannelBlockers[6] = tr("all");
+
+  ChannelBlockerModes[0] = tr("none");
+  ChannelBlockerModes[1] = tr("has decoder");
+  ChannelBlockerModes[2] = tr("is primary");
+  ChannelBlockerModes[3] = tr("has decoder + is primary");
+
   Clear();
 
   Add(new cMenuEditIntItem( tr("Setup.DVB$Primary DVB interface"), &data.PrimaryDVB, 1, cDevice::NumDevices()));
@@ -2443,6 +2458,9 @@ void cMenuSetupDVB::Setup(void)
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle foreground transparency"), &data.SubtitleFgTransparency, 0, 9));
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle background transparency"), &data.SubtitleBgTransparency, 0, 10));
      }
+  Add(new cMenuEditBoolItem(tr("Setup.DVB$Use AC3-Transfer Fix"),        &data.DolbyTransferFix));
+  Add(new cMenuEditStraItem(tr("Setup.DVB$Channel Blocker"),             &data.ChannelBlocker, 7, ChannelBlockers));
+  Add(new cMenuEditStraItem(tr("Setup.DVB$Channel Blocker Filter Mode"), &data.ChannelBlockerMode, 4, ChannelBlockerModes));
 
   SetCurrent(Get(current));
   Display();
