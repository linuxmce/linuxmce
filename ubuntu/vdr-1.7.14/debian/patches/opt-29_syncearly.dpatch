#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-29_syncearly.dpatch by Reinhard Nissl <rnissl@gmx.de>
##
## vdr-freak at vdrportal.de:
##   - extracted from extensions patch
##     http://vdrportal.de/board/thread.php?postid=668434#post668434
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Speed up zapping channels.

@DPATCH@
diff -ruN vdr-1.5.11/config.c vdr-1.5.11-syncearly/config.c
--- vdr-1.5.11/config.c	2007-10-06 16:28:58.000000000 +0200
+++ vdr-1.5.11-syncearly/config.c	2007-11-11 19:44:35.000000000 +0100
@@ -261,6 +261,7 @@
   VideoFormat = 0;
   UpdateChannels = 5;
   UseDolbyDigital = 1;
+  UseSyncEarlyPatch = 0;
   ChannelInfoPos = 0;
   ChannelInfoTime = 5;
   OSDLeft = 54;
@@ -436,6 +437,7 @@
   else if (!strcasecmp(Name, "VideoFormat"))         VideoFormat        = atoi(Value);
   else if (!strcasecmp(Name, "UpdateChannels"))      UpdateChannels     = atoi(Value);
   else if (!strcasecmp(Name, "UseDolbyDigital"))     UseDolbyDigital    = atoi(Value);
+  else if (!strcasecmp(Name, "UseSyncEarlyPatch"))   UseSyncEarlyPatch  = atoi(Value);
   else if (!strcasecmp(Name, "ChannelInfoPos"))      ChannelInfoPos     = atoi(Value);
   else if (!strcasecmp(Name, "ChannelInfoTime"))     ChannelInfoTime    = atoi(Value);
   else if (!strcasecmp(Name, "OSDLeft"))             OSDLeft            = atoi(Value);
@@ -518,6 +520,7 @@
   Store("VideoFormat",        VideoFormat);
   Store("UpdateChannels",     UpdateChannels);
   Store("UseDolbyDigital",    UseDolbyDigital);
+  Store("UseSyncEarlyPatch",  UseSyncEarlyPatch);
   Store("ChannelInfoPos",     ChannelInfoPos);
   Store("ChannelInfoTime",    ChannelInfoTime);
   Store("OSDLeft",            OSDLeft);
diff -ruN vdr-1.5.11/config.h vdr-1.5.11-syncearly/config.h
--- vdr-1.5.11/config.h	2007-10-17 20:34:17.000000000 +0200
+++ vdr-1.5.11-syncearly/config.h	2007-11-11 19:44:21.000000000 +0100
@@ -242,6 +242,7 @@
   int VideoFormat;
   int UpdateChannels;
   int UseDolbyDigital;
+  int UseSyncEarlyPatch;
   int ChannelInfoPos;
   int ChannelInfoTime;
   int OSDLeft, OSDTop, OSDWidth, OSDHeight;
diff -ruN vdr-1.5.11/device.c vdr-1.5.11-syncearly/device.c
--- vdr-1.5.11/device.c	2007-11-03 14:30:09.000000000 +0100
+++ vdr-1.5.11-syncearly/device.c	2007-11-11 19:44:55.000000000 +0100
@@ -824,7 +824,7 @@
            }
         for (int i = 0; i < MAXSPIDS; i++)
             SetAvailableTrack(ttSubtitle, i, Channel->Spid(i), Channel->Slang(i));
-        if (!NeedsTransferMode)
+        if ((Setup.UseSyncEarlyPatch && (!NeedsTransferMode || GetCurrentAudioTrack() == ttNone)) || (!Setup.UseSyncEarlyPatch && !NeedsTransferMode))
            EnsureAudioTrack(true);
         EnsureSubtitleTrack();
         }
diff -ruN vdr-1.5.11/menu.c vdr-1.5.11-syncearly/menu.c
--- vdr-1.5.11/menu.c	2007-11-03 16:02:00.000000000 +0100
+++ vdr-1.5.11-syncearly/menu.c	2007-11-11 19:46:07.000000000 +0100
@@ -2461,6 +2461,7 @@
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle foreground transparency"), &data.SubtitleFgTransparency, 0, 9));
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle background transparency"), &data.SubtitleBgTransparency, 0, 10));
      }
+  Add(new cMenuEditBoolItem(tr("Setup.DVB$Use Sync Early Patch"),  &data.UseSyncEarlyPatch));
 
   SetCurrent(Get(current));
   Display();
diff -ruN vdr-1.5.11/remux.c vdr-1.5.11-syncearly/remux.c
--- vdr-1.5.11/remux.c	2007-11-03 15:18:07.000000000 +0100
+++ vdr-1.5.11-syncearly/remux.c	2007-11-11 19:45:54.000000000 +0100
@@ -1874,12 +1874,13 @@
 
 #define RESULTBUFFERSIZE KILOBYTE(256)
 
-cRemux::cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure)
+cRemux::cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure, bool SyncEarly)
 {
   exitOnFailure = ExitOnFailure;
   noVideo = VPid == 0 || VPid == 1 || VPid == 0x1FFF;
   numUPTerrors = 0;
   synced = false;
+  syncEarly = SyncEarly;
   skipped = 0;
   numTracks = 0;
   resultSkipped = 0;
@@ -2081,12 +2082,18 @@
                         ShutdownHandler.RequestEmergencyExit();
                      }
                   else if (!synced) {
-                     if (pt == I_FRAME) {
+                     if (pt == I_FRAME || syncEarly) {
                         if (PictureType)
                            *PictureType = pt;
                         resultSkipped = i; // will drop everything before this position
+                        if (!syncEarly)
                         SetBrokenLink(data + i, l);
                         synced = true;
+                        if (syncEarly) {
+                           if (pt == I_FRAME) // syncEarly: it's ok but there is no need to call SetBrokenLink()
+                              SetBrokenLink(data + i, l);
+                           else fprintf(stderr, "video: synced early\n");
+                           }
                         }
                      }
                   else if (Count)
@@ -2099,12 +2106,13 @@
                l = GetPacketLength(data, resultCount, i);
                if (l < 0)
                   return resultData;
-               if (noVideo) {
+               if (noVideo || !synced && syncEarly) {
                   if (!synced) {
-                     if (PictureType)
+                     if (PictureType && noVideo)
                         *PictureType = I_FRAME;
                      resultSkipped = i; // will drop everything before this position
                      synced = true;
+                     if (!noVideo && syncEarly) fprintf(stderr, "audio: synced early\n");
                      }
                   else if (Count)
                      return resultData;
diff -ruN vdr-1.5.11/remux.h vdr-1.5.11-syncearly/remux.h
--- vdr-1.5.11/remux.h	2007-09-02 12:19:06.000000000 +0200
+++ vdr-1.5.11-syncearly/remux.h	2007-11-11 19:47:24.000000000 +0100
@@ -40,6 +40,7 @@
   bool noVideo;
   int numUPTerrors;
   bool synced;
+  bool syncEarly;
   int skipped;
   cTS2PES *ts2pes[MAXTRACKS];
   int numTracks;
@@ -47,12 +48,14 @@
   int resultSkipped;
   int GetPid(const uchar *Data);
 public:
-  cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure = false);
+  cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure = false, bool SyncEarly = false);
        ///< Creates a new remuxer for the given PIDs. VPid is the video PID, while
        ///< APids, DPids and SPids are pointers to zero terminated lists of audio,
        ///< dolby and subtitle PIDs (the pointers may be NULL if there is no such
        ///< PID). If ExitOnFailure is true, the remuxer will initiate an "emergency
        ///< exit" in case of problems with the data stream.
+       ///< SyncEarly causes cRemux to sync as soon as a video or audio frame is seen.
+
   ~cRemux();
   void SetTimeouts(int PutTimeout, int GetTimeout) { resultBuffer->SetTimeouts(PutTimeout, GetTimeout); }
        ///< By default cRemux assumes that Put() and Get() are called from different
diff -ruN vdr-1.5.11/transfer.c vdr-1.5.11-syncearly/transfer.c
--- vdr-1.5.11/transfer.c	2007-01-05 11:45:28.000000000 +0100
+++ vdr-1.5.11-syncearly/transfer.c	2007-11-11 19:45:08.000000000 +0100
@@ -19,7 +19,7 @@
 ,cThread("transfer")
 {
   ringBuffer = new cRingBufferLinear(TRANSFERBUFSIZE, TS_SIZE * 2, true, "Transfer");
-  remux = new cRemux(VPid, APids, Setup.UseDolbyDigital ? DPids : NULL, SPids);
+  remux = new cRemux(VPid, APids, Setup.UseDolbyDigital ? DPids : NULL, SPids, false, Setup.UseSyncEarlyPatch);
 }
 
 cTransfer::~cTransfer()
