#! /bin/bash
#
# vdr start-stop script
#
### BEGIN INIT INFO
# Provides:          vdr
# Required-Start:    $network $syslog
# Required-Stop:     $network $syslog
# Should-Start:      $local_fs $remote_fs
# Should-Stop:       $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the Linux Video Disk Recorder (VDR)
# Description:       Starts the Linux Video Disk Recorder (VDR),
#                    if it is enabled in /etc/default/vdr.
### END INIT INFO

. /usr/pluto/bin/Network_Parameters.sh

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=vdr
DESC="Linux Video Disk Recorder"

DAEMON=/usr/sbin/runvdr
PIDFILE=/var/run/runvdr.pid
VDRPRG=/usr/bin/vdr

test -x $DAEMON || exit 0
test -x $VDRPRG || exit 0

. /usr/lib/vdr/config-loader.sh

# Set shutdown command
test "$ENABLE_SHUTDOWN" = "1" && VDRSHUTDOWN="/usr/lib/vdr/vdr-shutdown.wrapper" \
                              || VDRSHUTDOWN="/usr/lib/vdr/vdr-shutdown-message"

. /usr/lib/vdr/plugin-loader.sh
. /usr/lib/vdr/commands-loader.sh


clean_console()
{
    if [ "$KEYB_TTY" != "" ]; then
        tput -Tlinux clear > $KEYB_TTY
    fi
}

configure_console_input()
{
    if [ "$KEYB_TTY" != "" ]; then
        clean_console
        echo -e "This tty is currently mapped to VDR, keypresses aren't echoed.\r" > $KEYB_TTY
        echo -n "For a login prompt switch to another console." > $KEYB_TTY
        REDIRECT="< $KEYB_TTY"
        if [ "$KEYB_TTY_SWITCH" = "1" ]; then
            chvt `echo "$KEYB_TTY" | sed "s/\/dev\/tty//"`
        fi
    fi
}

get_status()
{
    if start-stop-daemon --start --startas $DAEMON --test \
        --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
    then
        echo " - is not running."
        exit 3
    else
        echo " - is running."
        exit 0
    fi
}

start_multiplex()
{
    if ! ps ax | grep -q 'svdrp-multiplex$'; then
        /usr/pluto/bin/svdrp-multiplex &>/dev/null </dev/null &
    fi
}

store_card_types()
{
	local Card
	local FEtype

	for Card in /dev/dvb/adapter*; do
		Card="${Card:16}"
		if [[ "$Card" == '*' ]]; then
			break;
		fi
		FEtype=$(dvbsnoop -s feinfo -adapter "$Card" 2>/dev/null | grep 'Frontend-type' | sed -r 's,^.*(DVB-[ST][0-9]?).*$,\1,g')
		echo "$Card $FEtype"
	done >/usr/pluto/share/dvb-card-types.txt
}

setup_network()
{
	local RootFs
	local DCERouter
	RootFs=$(stat -c '%T' -f /)

	# LinuxMCE/Dianemo: setup streamdev on MDs
	if [[ "$RootFs" == nfs ]]; then
		DCERouter=$(getent hosts dcerouter | awk '{print $1}')
		if ! grep -q '^streamdev-client' /var/lib/vdr/setup.conf; then
echo "streamdev-client.RemoteIp = $DCERouter
streamdev-client.RemotePort = 2004
streamdev-client.StartClient = 1
streamdev-client.StreamFilters = 1
streamdev-client.SyncEPG = 0" >>/var/lib/vdr/setup.conf
		else
			sed -ri 's,^streamdev-client\.RemoteIp = .*$,streamdev-client.RemoteIp = '"$DCERouter"',g' /var/lib/vdr/setup.conf
		fi
		if ! grep -q '^remotetimers' /var/lib/vdr/setup.conf; then
echo "remotetimers.AddToRemote = 1
remotetimers.DefaultUser = 0
remotetimers.HideMainMenuEntry = 1
remotetimers.RemoteInstant = 1
remotetimers.RemotePause = 1
remotetimers.ReplaceRecordings = 1
remotetimers.ReplaceSchedule = 1
remotetimers.ReplaceTimers = 1
remotetimers.ServerDir = 
remotetimers.ServerIp = $DCERouter
remotetimers.ServerPort = 2001
remotetimers.ShowProgressBar = 1
remotetimers.SwapOkBlue = 0
remotetimers.UserFilterRecordings = 0
remotetimers.UserFilterSchedule = 0
remotetimers.UserFilterTimers = 0
remotetimers.WatchUpdate = 1" >>/var/lib/vdr/setup.conf
		else
			sed -ri 's,^remotetimers\.ServerIp = .*$,remotetimers.ServerIp = '"$DCERouter"',g' /var/lib/vdr/setup.conf
		fi
	elif [[ "$RootFs" != nfs ]] && ! grep -q '^streamdev-server' /var/lib/vdr/setup.conf; then
echo "streamdev-server.AllowSuspend = 1
streamdev-server.HTTPBindIP = 0.0.0.0
streamdev-server.HTTPServerPort = 3000
streamdev-server.HTTPStreamType = 1
streamdev-server.MaxClients = 8
streamdev-server.ServerPort = 2004
streamdev-server.StartHTTPServer = 1
streamdev-server.StartServer = 1
streamdev-server.SuspendMode = 1
streamdev-server.VTPBindIP = 0.0.0.0" >>/var/lib/vdr/setup.conf
		Link=/home/public/data/VDRTV/video
		VideoDir="video.00"
		if [[ ! -L "$Link" && ! -e "$Link" ]]; then
			ln -s "$VideoDir" "$Link"
		fi
		StreamDevConf=/var/lib/vdr/plugins/streamdevhosts.conf
		if [[ -f "$StreamDevConf" ]]; then
			IFS=. read N1 N2 N3 N4 < <(echo "$IntNetmask")
			BitMask=$(echo "ibase=10; obase=2; $N1; $N2; $N3; $N4" | bc | tr -d '\n0' | wc -c)
			(grep -v '# Dianemo network range' "$StreamDevConf"; echo "$IntIP/$BitMask # Dianemo network range") >"$StreamDevConf.new"
			mv "$StreamDevConf"{.new,}
			/etc/init.d/vdr restart
		fi
		if [[ -f /var/lib/vdr/reset_current_channel ]]; then
			read FirstChan garbage </var/lib/vdr/channels.conf
			if [[ "$FirstChan" == ':@'* ]]; then
				FirstChan="${FirstChan#:@}"
			else
				FirstChan=1
			fi
			sed -ri "s/^CurrentChannel = .*$/CurrentChannel = $FirstChan/g" /var/lib/vdr/setup.conf
			rm -f /var/lib/vdr/reset_current_channel
		fi
	fi
}

startvdr()
{
    if [ "$ENABLED" != "0" ] ; then
        start_multiplex
        # only start vdr if there is no other instance running
        if start-stop-daemon --start --startas $DAEMON --test \
            --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
        then
            store_card_types
            setup_network
            getplugins
            mergecommands "commands"
            mergecommands "reccmds"
            configure_console_input

            if [ "$VFAT" == "1" ]; then
                OPTIONS="--vfat $OPTIONS"
            fi

            start-stop-daemon --start --quiet --startas $DAEMON --background \
                --name $(basename $DAEMON) --pidfile $PIDFILE --make-pidfile -- \
                -v $VIDEO_DIR -c $CFG_DIR -L $PLUGIN_DIR -r $REC_CMD \
                -s $VDRSHUTDOWN -E $EPG_FILE -u $USER -g /tmp \
                --port $SVDRP_PORT $OPTIONS $PLUGINS $REDIRECT
        else
            echo -n " - seems to be running already"
        fi
    else
        echo -n " - aborted (to enable the daemon, edit /etc/default/vdr)"
        store_card_types
        setup_network
    fi
}

stopvdr()
{
    if start-stop-daemon --stop --retry 30 \
        --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
    then
        start-stop-daemon --stop --retry 30 --oknodo --exec $VDRPRG-kbd >/dev/null
        rm -f $PIDFILE
        clean_console
    else
        echo -n " - seems not to be running"
    fi
}

case "$1" in
    start)
        echo -n "Starting $DESC: $NAME"
        startvdr
        echo "."
        ;;
    stop)
        echo -n "Stopping $DESC: $NAME"
        stopvdr
        echo "."
        ;;
    restart|force-reload)
        echo -n "Restarting $DESC: $NAME"
        stopvdr
        sleep 4
        startvdr
        echo "."
        ;;
    status)
        echo -n "Getting status of $DESC: $NAME"
        get_status
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
