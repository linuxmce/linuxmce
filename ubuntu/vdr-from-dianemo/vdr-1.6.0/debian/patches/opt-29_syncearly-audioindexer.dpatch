#! /bin/sh /usr/share/dpatch/dpatch-run
## opt-29_syncearly-audioindexer.dpatch by Reinhard Nissl <rnissl@gmx.de>
##
## vdr-freak at vdrportal.de:
##   - extracted from extensions patch
##     http://vdrportal.de/board/thread.php?postid=668434#post668434
##
## Thomas Günther <tom@toms-cafe.de>:
##   - adapted to audioindexer patch
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Speed up zapping channels.

@DPATCH@
diff -Naurp vdr-1.5.11-audioindexer/config.c vdr-1.5.11-audioindexer-syncearly/config.c
--- vdr-1.5.11-audioindexer/config.c	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/config.c	2007-11-13 23:00:17.000000000 +0000
@@ -305,6 +305,7 @@ cSetup::cSetup(void)
   UpdateChannels = 5;
   RecordDolbyDigital = 1;
   UseDolbyDigital = 1;
+  UseSyncEarlyPatch = 0;
   ChannelInfoPos = 0;
   ChannelInfoTime = 5;
   OSDLeft = 54;
@@ -540,6 +541,7 @@ bool cSetup::Parse(const char *Name, con
   else if (!strcasecmp(Name, "UpdateChannels"))      UpdateChannels     = atoi(Value);
   else if (!strcasecmp(Name, "RecordDolbyDigital"))  RecordDolbyDigital = atoi(Value);
   else if (!strcasecmp(Name, "UseDolbyDigital"))     UseDolbyDigital    = atoi(Value);
+  else if (!strcasecmp(Name, "UseSyncEarlyPatch"))   UseSyncEarlyPatch  = atoi(Value);
   else if (!strcasecmp(Name, "ChannelInfoPos"))      ChannelInfoPos     = atoi(Value);
   else if (!strcasecmp(Name, "ChannelInfoTime"))     ChannelInfoTime    = atoi(Value);
   else if (!strcasecmp(Name, "OSDLeft"))             OSDLeft            = atoi(Value);
@@ -643,6 +645,7 @@ bool cSetup::Save(void)
   Store("UpdateChannels",     UpdateChannels);
   Store("RecordDolbyDigital", RecordDolbyDigital);
   Store("UseDolbyDigital",    UseDolbyDigital);
+  Store("UseSyncEarlyPatch",  UseSyncEarlyPatch);
   Store("ChannelInfoPos",     ChannelInfoPos);
   Store("ChannelInfoTime",    ChannelInfoTime);
   Store("OSDLeft",            OSDLeft);
diff -Naurp vdr-1.5.11-audioindexer/config.h vdr-1.5.11-audioindexer-syncearly/config.h
--- vdr-1.5.11-audioindexer/config.h	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/config.h	2007-11-13 23:00:17.000000000 +0000
@@ -278,6 +278,7 @@ public:
   int UpdateChannels;
   int RecordDolbyDigital;
   int UseDolbyDigital;
+  int UseSyncEarlyPatch;
   int ChannelInfoPos;
   int ChannelInfoTime;
   int OSDLeft, OSDTop, OSDWidth, OSDHeight;
diff -Naurp vdr-1.5.11-audioindexer/device.c vdr-1.5.11-audioindexer-syncearly/device.c
--- vdr-1.5.11-audioindexer/device.c	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/device.c	2007-11-13 23:00:17.000000000 +0000
@@ -842,7 +842,7 @@ eSetChannelResult cDevice::SetChannel(co
            }
         for (int i = 0; i < MAXSPIDS; i++)
             SetAvailableTrack(ttSubtitle, i, Channel->Spid(i), Channel->Slang(i));
-        if (!NeedsTransferMode)
+        if ((Setup.UseSyncEarlyPatch && (!NeedsTransferMode || GetCurrentAudioTrack() == ttNone)) || (!Setup.UseSyncEarlyPatch && !NeedsTransferMode))
            EnsureAudioTrack(true);
         EnsureSubtitleTrack();
         }
diff -Naurp vdr-1.5.11-audioindexer/menu.c vdr-1.5.11-audioindexer-syncearly/menu.c
--- vdr-1.5.11-audioindexer/menu.c	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/menu.c	2007-11-13 23:00:17.000000000 +0000
@@ -2898,6 +2898,7 @@ void cMenuSetupDVB::Setup(void)
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle foreground transparency"), &data.SubtitleFgTransparency, 0, 9));
      Add(new cMenuEditIntItem( tr("Setup.DVB$Subtitle background transparency"), &data.SubtitleBgTransparency, 0, 10));
      }
+  Add(new cMenuEditBoolItem(tr("Setup.DVB$Use Sync Early Patch"),  &data.UseSyncEarlyPatch));
 
   SetCurrent(Get(current));
   Display();
diff -Naurp vdr-1.5.11-audioindexer/remux.c vdr-1.5.11-audioindexer-syncearly/remux.c
--- vdr-1.5.11-audioindexer/remux.c	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/remux.c	2007-11-13 23:19:05.000000000 +0000
@@ -1976,13 +1976,14 @@ void cAudioIndexer::ProcessFrame(void)
 
 #define RESULTBUFFERSIZE KILOBYTE(256)
 
-cRemux::cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure)
+cRemux::cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure, bool SyncEarly)
 {
   exitOnFailure = ExitOnFailure;
   noVideo = VPid == 0 || VPid == 1 || VPid == 0x1FFF;
   audioIndexer = (noVideo ? new cAudioIndexer : NULL);
   numUPTerrors = 0;
   synced = false;
+  syncEarly = SyncEarly;
   skipped = 0;
   numTracks = 0;
   resultSkipped = 0;
@@ -2196,12 +2197,18 @@ uchar *cRemux::Get(int &Count, uchar *Pi
                         ShutdownHandler.RequestEmergencyExit();
                      }
                   else if (!synced) {
-                     if (pt == I_FRAME) {
+                     if (pt == I_FRAME || syncEarly) {
                         if (PictureType)
                            *PictureType = pt;
                         resultSkipped = i; // will drop everything before this position
+                        if (!syncEarly)
                         SetBrokenLink(data + i, l);
                         synced = true;
+                        if (syncEarly) {
+                           if (pt == I_FRAME) // syncEarly: it's ok but there is no need to call SetBrokenLink()
+                              SetBrokenLink(data + i, l);
+                           else fprintf(stderr, "video: synced early\n");
+                           }
                         }
                      }
                   else if (Count)
@@ -2214,15 +2221,16 @@ uchar *cRemux::Get(int &Count, uchar *Pi
                l = GetPacketLength(data, resultCount, i);
                if (l < 0)
                   return resultData;
-               if (noVideo) {
+               if (noVideo || !synced && syncEarly) {
                   uchar pt = NO_PICTURE;
                   if (audioIndexer && !Count)
                      audioIndexer->PrepareFrame(data, resultCount, i, pt); 
                   if (!synced) {
-                     if (PictureType)
+                     if (PictureType && noVideo)
                         *PictureType = pt;
                      resultSkipped = i; // will drop everything before this position
                      synced = true;
+                     if (!noVideo && syncEarly) fprintf(stderr, "audio: synced early\n");
                      }
                   else if (Count)
                      return resultData;
diff -Naurp vdr-1.5.11-audioindexer/remux.h vdr-1.5.11-audioindexer-syncearly/remux.h
--- vdr-1.5.11-audioindexer/remux.h	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/remux.h	2007-11-13 23:00:17.000000000 +0000
@@ -41,6 +41,7 @@ private:
   bool noVideo;
   int numUPTerrors;
   bool synced;
+  bool syncEarly;
   int skipped;
   cTS2PES *ts2pes[MAXTRACKS];
   int numTracks;
@@ -49,12 +50,14 @@ private:
   cAudioIndexer *audioIndexer;
   int GetPid(const uchar *Data);
 public:
-  cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure = false);
+  cRemux(int VPid, const int *APids, const int *DPids, const int *SPids, bool ExitOnFailure = false, bool SyncEarly = false);
        ///< Creates a new remuxer for the given PIDs. VPid is the video PID, while
        ///< APids, DPids and SPids are pointers to zero terminated lists of audio,
        ///< dolby and subtitle PIDs (the pointers may be NULL if there is no such
        ///< PID). If ExitOnFailure is true, the remuxer will initiate an "emergency
        ///< exit" in case of problems with the data stream.
+       ///< SyncEarly causes cRemux to sync as soon as a video or audio frame is seen.
+
   ~cRemux();
   void SetTimeouts(int PutTimeout, int GetTimeout) { resultBuffer->SetTimeouts(PutTimeout, GetTimeout); }
        ///< By default cRemux assumes that Put() and Get() are called from different
diff -Naurp vdr-1.5.11-audioindexer/transfer.c vdr-1.5.11-audioindexer-syncearly/transfer.c
--- vdr-1.5.11-audioindexer/transfer.c	2007-11-13 23:00:17.000000000 +0000
+++ vdr-1.5.11-audioindexer-syncearly/transfer.c	2007-11-13 23:00:17.000000000 +0000
@@ -19,7 +19,7 @@ cTransfer::cTransfer(tChannelID ChannelI
 ,cThread("transfer")
 {
   ringBuffer = new cRingBufferLinear(TRANSFERBUFSIZE, TS_SIZE * 2, true, "Transfer");
-  remux = new cRemux(VPid, APids, Setup.UseDolbyDigital ? DPids : NULL, SPids);
+  remux = new cRemux(VPid, APids, Setup.UseDolbyDigital ? DPids : NULL, SPids, false, Setup.UseSyncEarlyPatch);
 }
 
 cTransfer::~cTransfer()
