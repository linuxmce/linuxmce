# -*- Makefile -*-

SVNROOT=$(PWD)
MRLOC=${SVNROOT}/build/bin/MakeRelease
SCRIPTLOC="src/Ubuntu_Helpers/"
RUN=${SCRIPTLOC}/RunFunction.sh
DB_USER="lmce_build"
DB_PASSWORD="lmce_build"
DB_PORT=4306
disklessfs=${SVNROOT}/build/DisklessFS

include settings.mk

all: prep
	$(MAKE) create_cdrom
	@touch build/state_done

prep: install_dev_packages
	@mkdir -p build/tmp/home/
	@cp src/fakepkgs/README.Devel.Dependencies build/tmp/home/
	@mkdir -p build/tmp/usr/pluto/dummy-packages
	@touch build/tmp/usr/pluto/dummy-packages/Readme.PlutoConsoleUtilities.dummy
	@chmod gu+rwx build
	@touch build/state_started
	$(MAKE) start_build_db

sudo:
	@printf "I need to run sudo...\n"
	@sudo printf ""

doxygen:
	@doxygen doc/doxygen/doxygen.conf

build/state_dev_packages_installed_1564: sudo
	${RUN} ${SVNROOT} SUDO_Install_Build_Needed_Packages_SUDO
	@mkdir -p build
	@touch build/state_dev_packages_installed_1564

install_dev_packages: build/state_dev_packages_installed_1564

build/state_videos_downloaded_429:
	@mkdir -p build
	@rm -rf video-wizard-videos
	@echo Downloading wizard videos
	@cd build ; wget -c http://www.charonmedia.org/video-wizard-videos-429.tar
	@echo Extracting wizard videos
	@cd build ; tar xf video-wizard-videos-429.tar
	@rm build/video-wizard-videos-429.tar
	@touch build/state_videos_downloaded_429

download_videos: build/state_videos_downloaded_429

build/state_diskless_archive_created_1333: sudo
	@${RUN} ${SVNROOT} Create_Diskless_Archive
	@mkdir -p build/tmp/home/
	cp -R ${disklessfs} build/tmp/home/
	@touch build/state_diskless_archive_created_1333

create_diskless_archive_sudo: build/state_diskless_archive_created_1333

tee-pluto:
	@${RUN} ${SVNROOT} Build_Replacement_Package misc_utils/tee-pluto

xine-lib:
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/xine-lib-1.1.3

mplayer:
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/mplayer

lshwd:
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/lshwd-2.0-rc4

ivtv_drivers: sudo
	@${RUN} ${SVNROOT} SUDO_Build_IVTV_SUDO

ivtv_firmware:
	@${RUN} ${SVNROOT} Repackage_IVTV_Firmware

lirc_drivers: sudo
	@${RUN} ${SVNROOT} SUDO_Build_LIRC_SUDO

lirc_app:
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/lirc-pluto-0.1

lirc: lirc_drivers lirc_app

ivtv: ivtv_drivers ivtv_firmware
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/lshwd-2.0-rc4

mtx:
	@${RUN} ${SVNROOT} Build_Replacement_Package ubuntu/mtx-1.3.11

mce-launcher:
	@${RUN} ${SVNROOT} Build_Replacement_Package src/mce-launcher

mce-installer:
	@${RUN} ${SVNROOT} Build_Replacement_Package src/mce-installer

linux-dummy-image:
	@${RUN} ${SVNROOT} Build_Replacement_LinuxDummyImage

build/state_built_video_wizard_package_442: download_videos
	@${RUN} ${SVNROOT} Build_VideoWizardVideos
	@touch build/state_built_video_wizard_package_442

video_wizard_videos: build/state_built_video_wizard_package_442

build_replacement_packages_sudo: prep
	$(MAKE) ivtv_drivers lirc_drivers

build_replacement_packages: prep build_replacement_packages_sudo
	$(MAKE) tee-pluto xine-lib mplayer lirc_app ivtv_firmware lshwd mtx mce-launcher mce-installer linux-dummy-image

##############

src/lib/libpluto_main.so:
	cd ${SVNROOT}/src/pluto_main ; $(MAKE) -f Makefile.no-wrapper ; cd ${SVNROOT}

src/lib/libPlutoUtils.so: src/lib/libpluto_main.so
	cd ${SVNROOT}/src/PlutoUtils ; $(MAKE) -f Makefile.no-wrapper ; cd ${SVNROOT}

src/lib/libSerializeClass.so: src/lib/libPlutoUtils.so
	cd ${SVNROOT}/src/SerializeClass ; $(MAKE) -f Makefile.nosnr ; cd ${SVNROOT}

src/lib/libDCECommon.so: src/lib/libSerializeClass.so
	cd ${SVNROOT}/src/DCE ; $(MAKE) -f Makefile.no-wrapper ; cd ${SVNROOT}

src/bin/MakeRelease: src/lib/libDCECommon.so src/lib/libpluto_main.so
	cd ${SVNROOT}/src/MakeRelease ; $(MAKE) -f Makefile.no-wrapper ; cd ${SVNROOT}

src/bin/MakeRelease_PrepFiles: src/lib/libDCECommon.so src/lib/libpluto_main.so
	cd ${SVNROOT}/src/MakeRelease_PrepFiles ; $(MAKE) ; cd ${SVNROOT}

src/bin/mysql_wrapper: src/bin/MakeRelease
	cd ${SVNROOT}/src/mysql_wrapper ; $(MAKE) ; cd ${SVNROOT}

${MRLOC}:
	@mkdir -p ${MRLOC}

${MRLOC}/libpluto_main.so: src/lib/libpluto_main.so ${MRLOC}
	@cp ${SVNROOT}/src/lib/libpluto_main.so     ${MRLOC}

${MRLOC}/libPlutoUtils.so: src/lib/libPlutoUtils.so ${MRLOC}
	@cp ${SVNROOT}/src/lib/libPlutoUtils.so     ${MRLOC}

${MRLOC}/libSerializeClass.so: src/lib/libSerializeClass.so ${MRLOC}
	@cp ${SVNROOT}/src/lib/libSerializeClass.so ${MRLOC}

${MRLOC}/libDCECommon.so: src/lib/libDCECommon.so   ${MRLOC}
	@cp ${SVNROOT}/src/lib/libDCECommon.so      ${MRLOC}

mkrlib: ${MRLOC}/libpluto_main.so ${MRLOC}/libPlutoUtils.so \
        ${MRLOC}/libSerializeClass.so ${MRLOC}/libDCECommon.so

${MRLOC}/MakeRelease: src/bin/MakeRelease mkrlib    ${MRLOC}
	@cp src/bin/MakeRelease                     ${MRLOC}

${MRLOC}/MakeRelease_PrepFiles: src/bin/MakeRelease_PrepFiles mkrlib ${MRLOC}
	@rm -f build/state_ran_makerelease_prep
	@cp src/bin/MakeRelease_PrepFiles           ${MRLOC}

${MRLOC}/mysql_wrapper: src/bin/mysql_wrapper
	@mkdir -p ${MRLOC}
	@rm -f ${MRLOC}/mysql_wrapper
	@ln -s /usr/bin/mysql ${MRLOC}/mysql_wrapper

build/state_make_release_binary: ${MRLOC}/mysql_wrapper \
                                 ${MRLOC}/MakeRelease \
                                 ${MRLOC}/MakeRelease_PrepFiles
	@rm -f build/state_ran_makerelease_prep
	@mkdir -p build ; touch build/state_make_release_binary

build_makerelease_binary: build/state_make_release_binary

#############

db_backup: sudo
	@${RUN} ${SVNROOT} SUDO_Backup_Database_SUDO

db_restore: sudo
	@${RUN} ${SVNROOT} SUDO_Restore_Database_SUDO

build/state_db_setup_20501:
	@${RUN} ${SVNROOT} SUDO_Setup_Build_Database_SUDO ${DB_USER} ${DB_PASSWORD} ${DB_PORT}
	@touch build/state_db_setup_20501

setup_build_db: build/state_db_setup_20501

start_build_db: setup_build_db
	@${RUN} ${SVNROOT} SUDO_Start_Build_Database_SUDO

build/state_fake_exe_created_430:
	@${RUN} ${SVNROOT} Create_Fake_Windows_Binaries
	@mkdir -p build
	@touch build/state_fake_exe_created_430

create_fake_windows_binaries: build/state_fake_exe_created_430

makerelease_prep: build_makerelease_binary start_build_db
	@${RUN} ${SVNROOT} Run_MakeRelease_Prep

build_pluto: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease_Clean
	@${RUN} ${SVNROOT} Run_MakeRelease_All ${DB_USER} ${DB_PASSWORD} ${DB_PORT}

build_pluto_000: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_0_99

build_pluto_100: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_100_200

build_pluto_200: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_201_299

build_pluto_300: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_300_399

build_pluto_400: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_398_499

build_pluto_500: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_500_599

build_pluto_600: prep create_fake_windows_binaries makerelease_prep
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_600_699

#Note the targets below do not build all req. dependencies
build_mce_launcher:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_launch_manager

build_usb_uirt:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_usb_uirt

build_irbase:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_irbase

build_messagetranslation:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT}  mkr_messagetranslation

build_serial:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT}  mkr_serial

build_irtrans:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_irtrans

build_tira:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_tira

build_xine_player:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_xine_player

build_xine_plugin:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_xine_plugin

build_mythtv_plugin:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_mythtv_plugin

build_mythtv_player:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_mythtv_player

build_main_database_packages:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_system_database_package
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_local_database_package

build_base_database_packages:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_media_database_package
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_security_database_package

build_videolan_plugin_common:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_videolan_plugin_common

build_videolan_plugin_server:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_videolan_server

build_videolan_plugin_client:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_videolan_plugin_client

build_standard_plugins:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_standard_plugins

deps:
	@mkdir -p  build/tmp/home/
	@cp src/fakepkgs/README.Devel.Dependencies build/tmp/home/
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_development_dependencies_package

diskless_fs: create_diskless_archive_sudo
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_diskless_base_filesystem_package

diskless_files: create_diskless_archive_sudo
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_diskless_default_boot_file_package

diskless_tools: create_diskless_archive_sudo
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_mce_diskless_tools

diskless: diskless_fs diskless_files diskless_tools

dcelib:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_dce_library

zwave:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_zwave_lighting

dummy_console_utils:
	@${RUN} ${SVNROOT} Run_MakeRelease ${DB_USER} ${DB_PASSWORD} ${DB_PORT} mkr_dummy_pluto_console_utilities_package

#end -- no dependency targets

build/state_created_local_repo_430:
	@${RUN} ${SVNROOT} Create_Local_Repository
	@mkdir -p build
	@touch build/state_created_local_repo_430

create_local_repo: build/state_created_local_repo_430

create_cdrom: prep create_diskless_archive_sudo create_local_repo
	$(MAKE) build_replacement_packages build_pluto
	$(MAKE) video_wizard_videos 
	@${RUN} ${SVNROOT} Create_ISO

clean:
	rm -Rf build
	for i in src/* ; do pushd $$i && $(MAKE) clean ; popd; done
	rm -f ${SVNROOT}/src/bin/*
	rm -f ${SVNROOT}/src/lib/*

miniclean:
	rm -Rf build/state_make_release_binary build/bin
	rm -Rf build/state_fake_exe_created_* build/state_ran_makerelease_prep
	for i in src/* ; do pushd $$i && $(MAKE) clean ; popd; done
	rm -f ${SVNROOT}/src/bin/*
	rm -f ${SVNROOT}/src/lib/*