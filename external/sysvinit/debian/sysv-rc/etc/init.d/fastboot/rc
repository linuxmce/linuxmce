#!/bin/bash
#
# CHANGELOG
#   * Initial Release
#  -- Razvan Gavril <razvan.g@plutohome.com>
#

# AddService <rcX.d symlink>
AddService() {
    local rcFile="$1"
    local initFile=$( readlink -f $rcFile )
    
    # If service is started by rcS now
    [ "$(basename $initFile)" == "Pluto_Start_DCERouter.sh" ] && return
    [ "$(basename $initFile)" == "Pluto_Start_OrbiterGen.sh" ] && return
    [ "$(basename $initFile)" == "Pluto_Start_LocalDevices.sh" ] && return
    [ "$(basename $initFile)" == "Pluto_Start_X.sh" ] && return
    [ "$(basename $initFile)" == "Pluto_ConfirmInstallation.sh" ] && return
    [ "$(basename $initFile)" == "mysql" ] && return
    [ "$(basename $initFile)" == "ssh" ] && return
    [ "$(basename $initFile)" == "Pluto_Config_Device_Changes.sh" ] && return
    [ "$(basename $initFile)" == "sysklogd" ] && return
    
    # Else queue it to run
    if [[ -x "$initFile" ]]; then
	echo "$(basename `readlink $rcFile`) \\" >> /etc/init.d/fastboot/services.mk
    fi
}

NewServices() {
    # Create the services makefile header
    touch /etc/init.d/fastboot/services.mk

    echo "# This file was automaticaly generated by Pluto " > /etc/init.d/fastboot/services.mk
    echo "# DO NOT MODIFY ! :"                             >> /etc/init.d/fastboot/services.mk
    echo "#"                                               >> /etc/init.d/fastboot/services.mk 
    echo "# DATE:"                                         >> /etc/init.d/fastboot/services.mk 
    echo "# $(date -R)"                                    >> /etc/init.d/fastboot/services.mk
    echo "#"                                               >> /etc/init.d/fastboot/services.mk 
    echo "ALL = \\"                                        >> /etc/init.d/fastboot/services.mk

}

## Used only on 0 and 6 now
InitBootSplash() {
    #/etc/init.d/bootsplash stop 2>/dev/null

    # Forget about the progressbar for now
    return 

    local RUNLEVEL=$1
    local runrc=/etc/rc${RUNLEVEL}.d

    progress=0

    SSC=($runrc/S*)
    case "$SSC" in
        *\*) sscripts=0 ;;
        *) sscripts=${#SSC[*]}
    esac

    KSC=($runrc/K*)
    case "$KSC" in
        *\*) kscripts=0 ;;
        *) kscripts=${#KSC[*]}
    esac

    export progress kscripts sscripts
}


## Some defaults
trap ":" INT QUIT TSTP               # Ignore CTRL-C only in this shell, so we can interrupt subprocesses.
stty onlcr 0>&1                      # Set onlcr to avoid staircase effect.
mkdir /var/lock/subsys 2>/dev/null   # make needs this for locks
rm -rf /var/run/plutoboot
mkdir /var/run/plutoboot 2>/dev/null # make does some logging here (important for rc.display.sh too)




## Now find out what the current and what the previous runlevel are.
runlevel=$RUNLEVEL
[ "$1" != "" ] && runlevel=$1
if [ "$runlevel" = "" ] ;then
    echo "Usage: $0 <runlevel>" >&2
    exit 1
fi

previous=$PREVLEVEL
[ "$previous" = "" ] && previous=N

export runlevel previous


## Show a progress bar when shuting down or rebooting
if [[ "$runlevel" == "0" || "$runlevel" == "6" ]] ;then
    InitBootSplash $runlevel
fi

## Run the stop scripts for this runlevel
if [ $previous != N ] ;then
    NewServices
    for rcFile in /etc/rc$runlevel.d/K*
    do
	AddService "$rcFile"
    done
    /etc/init.d/fastboot/depend/generateDep.sh $runlevel stop
    make -k -i -j -f /etc/init.d/fastboot/rc.mk RUNLEVEL=$runlevel JOB=stop &
    pidMakeStop=$!    
    wait $pidMakeStop
fi



## Run the start scripts for this runlevel
NewServices
for rcFile in /etc/rc$runlevel.d/S*
do
    AddService "$rcFile"
done
/etc/init.d/fastboot/depend/generateDep.sh $runlevel start



if [[ "$runlevel" == "0" || "$runlevel" == "6" ]] ;then
	make -k -i -j -f /etc/init.d/fastboot/rc.mk RUNLEVEL=$runlevel JOB=start 2>/dev/null 1>/dev/null
else
	if [[ -f /proc/splash ]] ;then
		echo verbose > /proc/splash
	fi
	make -k -i -j -f /etc/init.d/fastboot/rc.mk RUNLEVEL=$runlevel JOB=start &>/dev/null &
fi
